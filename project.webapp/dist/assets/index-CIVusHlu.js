/*! @azure/msal-common v14.16.0 2024-11-05 */const d={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},Qe={CLIENT_ERROR_RANGE_START:400,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR_RANGE_START:500,SERVER_ERROR_RANGE_END:599},Le=[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE],Mn=[...Le,d.EMAIL_SCOPE],F={CONTENT_TYPE:"Content-Type",CONTENT_LENGTH:"Content-Length",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},U={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},de={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},Ye={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},L={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},Un={PLAIN:"plain",S256:"S256"},Ge={QUERY:"query",FRAGMENT:"fragment"},ei={...Ge},uo={AUTHORIZATION_CODE_GRANT:"authorization_code",REFRESH_TOKEN_GRANT:"refresh_token"},We={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",GENERIC_ACCOUNT_TYPE:"Generic"},x={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},I={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},Vt="appmetadata",ti="client_info",Ke="1",tt={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:3600*24},G={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},H={SCHEMA_VERSION:5,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},k={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},xe={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},Ln={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},Hn={username:"username",password:"password"},je={httpSuccess:200,httpBadRequest:400},Ee={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},wt={CONFIGURED_NO_AUTO_DETECTION:"2",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},he={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},ni={Pop:"pop"},oi=300;/*! @azure/msal-common v14.16.0 2024-11-05 */const Qt="unexpected_error",ri="post_request_failed";/*! @azure/msal-common v14.16.0 2024-11-05 */const Dn={[Qt]:"Unexpected error in authentication.",[ri]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class N extends Error{constructor(e,t,n){const o=t?`${e}: ${t}`:e;super(o),Object.setPrototypeOf(this,N.prototype),this.errorCode=e||d.EMPTY_STRING,this.errorMessage=t||d.EMPTY_STRING,this.subError=n||d.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function go(i,e){return new N(i,e?`${Dn[i]} ${e}`:Dn[i])}/*! @azure/msal-common v14.16.0 2024-11-05 */const Yt="client_info_decoding_error",mo="client_info_empty_error",Wt="token_parsing_error",po="null_or_empty_token",re="endpoints_resolution_error",fo="network_error",Co="openid_config_error",yo="hash_not_deserialized",Ne="invalid_state",To="state_mismatch",nt="state_not_found",Io="nonce_mismatch",jt="auth_time_not_found",Ao="max_age_transpired",ii="multiple_matching_tokens",ai="multiple_matching_accounts",Eo="multiple_matching_appMetadata",So="request_cannot_be_made",vo="cannot_remove_empty_scope",wo="cannot_append_scopeset",Ot="empty_input_scopeset",si="device_code_polling_cancelled",ci="device_code_expired",li="device_code_unknown_error",Jt="no_account_in_silent_request",_o="invalid_cache_record",Xt="invalid_cache_environment",Nt="no_account_found",Pt="no_crypto_object",Mt="unexpected_credential_type",hi="invalid_assertion",di="invalid_client_credential",ie="token_refresh_required",ui="user_timeout_reached",ko="token_claims_cnf_required_for_signedjwt",Ro="authorization_code_missing_from_server_response",bo="binding_key_not_removed",Oo="end_session_endpoint_not_supported",Zt="key_id_missing",gi="no_network_connectivity",mi="user_canceled",pi="missing_tenant_id_error",E="method_not_implemented",fi="nested_app_auth_bridge_disabled";/*! @azure/msal-common v14.16.0 2024-11-05 */const Kn={[Yt]:"The client info could not be parsed/decoded correctly",[mo]:"The client info was empty",[Wt]:"Token cannot be parsed",[po]:"The token is null or empty",[re]:"Endpoints cannot be resolved",[fo]:"Network request failed",[Co]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[yo]:"The hash parameters could not be deserialized",[Ne]:"State was not the expected format",[To]:"State mismatch error",[nt]:"State not found",[Io]:"Nonce mismatch error",[jt]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[Ao]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[ii]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[ai]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[Eo]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[So]:"Token request cannot be made without authorization code or refresh token.",[vo]:"Cannot remove null or empty scope from ScopeSet",[wo]:"Cannot append ScopeSet",[Ot]:"Empty input ScopeSet cannot be processed",[si]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[ci]:"Device code is expired.",[li]:"Device code stopped polling for unknown reasons.",[Jt]:"Please pass an account object, silent flow is not supported without account information",[_o]:"Cache record object was null or undefined.",[Xt]:"Invalid environment when attempting to create cache entry",[Nt]:"No account found in cache for given key.",[Pt]:"No crypto object detected.",[Mt]:"Unexpected credential type.",[hi]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[di]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[ie]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[ui]:"User defined timeout for device code polling reached",[ko]:"Cannot generate a POP jwt if the token_claims are not populated",[Ro]:"Server response does not contain an authorization code to proceed",[bo]:"Could not remove the credential's binding key from storage.",[Oo]:"The provided authority does not support logout",[Zt]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[gi]:"No network connectivity. Check your internet connection.",[mi]:"User cancelled the flow.",[pi]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[E]:"This method has not been implemented",[fi]:"The nested app auth bridge is disabled"};class dt extends N{constructor(e,t){super(e,t?`${Kn[e]}: ${t}`:Kn[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,dt.prototype)}}function g(i,e){return new dt(i,e)}/*! @azure/msal-common v14.16.0 2024-11-05 */const ot={createNewGuid:()=>{throw g(E)},base64Decode:()=>{throw g(E)},base64Encode:()=>{throw g(E)},base64UrlEncode:()=>{throw g(E)},encodeKid:()=>{throw g(E)},async getPublicKeyThumbprint(){throw g(E)},async removeTokenBindingKey(){throw g(E)},async clearKeystore(){throw g(E)},async signJwt(){throw g(E)},async hashString(){throw g(E)}};/*! @azure/msal-common v14.16.0 2024-11-05 */var O;(function(i){i[i.Error=0]="Error",i[i.Warning=1]="Warning",i[i.Info=2]="Info",i[i.Verbose=3]="Verbose",i[i.Trace=4]="Trace"})(O||(O={}));class ue{constructor(e,t,n){this.level=O.Info;const o=()=>{},r=e||ue.createDefaultLoggerOptions();this.localCallback=r.loggerCallback||o,this.piiLoggingEnabled=r.piiLoggingEnabled||!1,this.level=typeof r.logLevel=="number"?r.logLevel:O.Info,this.correlationId=r.correlationId||d.EMPTY_STRING,this.packageName=t||d.EMPTY_STRING,this.packageVersion=n||d.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:O.Info}}clone(e,t,n){return new ue({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`${`[${new Date().toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${O[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:O.Error,containsPii:!1,correlationId:t||d.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:O.Error,containsPii:!0,correlationId:t||d.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:O.Warning,containsPii:!1,correlationId:t||d.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:O.Warning,containsPii:!0,correlationId:t||d.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:O.Info,containsPii:!1,correlationId:t||d.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:O.Info,containsPii:!0,correlationId:t||d.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:O.Verbose,containsPii:!1,correlationId:t||d.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:O.Verbose,containsPii:!0,correlationId:t||d.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:O.Trace,containsPii:!1,correlationId:t||d.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:O.Trace,containsPii:!0,correlationId:t||d.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}/*! @azure/msal-common v14.16.0 2024-11-05 */const No="@azure/msal-common",en="14.16.0";/*! @azure/msal-common v14.16.0 2024-11-05 */const tn={None:"none"};/*! @azure/msal-common v14.16.0 2024-11-05 */function Ie(i,e){const t=Ci(i);try{const n=e(t);return JSON.parse(n)}catch{throw g(Wt)}}function Ci(i){if(!i)throw g(po);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(i);if(!t||t.length<4)throw g(Wt);return t[2]}function Po(i,e){if(e===0||Date.now()-3e5>i+e)throw g(Ao)}/*! @azure/msal-common v14.16.0 2024-11-05 */function ne(){return Math.round(new Date().getTime()/1e3)}function Ut(i,e){const t=Number(i)||0;return ne()+e>t}function yi(i){return Number(i)>ne()}/*! @azure/msal-common v14.16.0 2024-11-05 */function _e(i){return[Ti(i),Ii(i),Ai(i),Ei(i),Si(i)].join(x.CACHE_KEY_SEPARATOR).toLowerCase()}function ut(i,e,t,n,o){return{credentialType:I.ID_TOKEN,homeAccountId:i,environment:e,clientId:n,secret:t,realm:o}}function gt(i,e,t,n,o,r,a,s,c,l,u,p,f,A,_){const v={homeAccountId:i,credentialType:I.ACCESS_TOKEN,secret:t,cachedAt:ne().toString(),expiresOn:a.toString(),extendedExpiresOn:s.toString(),environment:e,clientId:n,realm:o,target:r,tokenType:u||k.BEARER};if(p&&(v.userAssertionHash=p),l&&(v.refreshOn=l.toString()),A&&(v.requestedClaims=A,v.requestedClaimsHash=_),v.tokenType?.toLowerCase()!==k.BEARER.toLowerCase())switch(v.credentialType=I.ACCESS_TOKEN_WITH_AUTH_SCHEME,v.tokenType){case k.POP:const D=Ie(t,c);if(!D?.cnf?.kid)throw g(ko);v.keyId=D.cnf.kid;break;case k.SSH:v.keyId=f}return v}function Mo(i,e,t,n,o,r,a){const s={credentialType:I.REFRESH_TOKEN,homeAccountId:i,environment:e,clientId:n,secret:t};return r&&(s.userAssertionHash=r),o&&(s.familyId=o),a&&(s.expiresOn=a.toString()),s}function nn(i){return i.hasOwnProperty("homeAccountId")&&i.hasOwnProperty("environment")&&i.hasOwnProperty("credentialType")&&i.hasOwnProperty("clientId")&&i.hasOwnProperty("secret")}function xn(i){return i?nn(i)&&i.hasOwnProperty("realm")&&i.hasOwnProperty("target")&&(i.credentialType===I.ACCESS_TOKEN||i.credentialType===I.ACCESS_TOKEN_WITH_AUTH_SCHEME):!1}function Fn(i){return i?nn(i)&&i.hasOwnProperty("realm")&&i.credentialType===I.ID_TOKEN:!1}function Bn(i){return i?nn(i)&&i.credentialType===I.REFRESH_TOKEN:!1}function Ti(i){return[i.homeAccountId,i.environment].join(x.CACHE_KEY_SEPARATOR).toLowerCase()}function Ii(i){const e=i.credentialType===I.REFRESH_TOKEN&&i.familyId||i.clientId;return[i.credentialType,e,i.realm||""].join(x.CACHE_KEY_SEPARATOR).toLowerCase()}function Ai(i){return(i.target||"").toLowerCase()}function Ei(i){return(i.requestedClaimsHash||"").toLowerCase()}function Si(i){return i.tokenType&&i.tokenType.toLowerCase()!==k.BEARER.toLowerCase()?i.tokenType.toLowerCase():""}function vi(i,e){const t=i.indexOf(H.CACHE_KEY)===0;let n=!0;return e&&(n=e.hasOwnProperty("failedRequests")&&e.hasOwnProperty("errors")&&e.hasOwnProperty("cacheHits")),t&&n}function wi(i,e){let t=!1;i&&(t=i.indexOf(xe.THROTTLING_PREFIX)===0);let n=!0;return e&&(n=e.hasOwnProperty("throttleTime")),t&&n}function _i({environment:i,clientId:e}){return[Vt,i,e].join(x.CACHE_KEY_SEPARATOR).toLowerCase()}function ki(i,e){return e?i.indexOf(Vt)===0&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("environment"):!1}function Ri(i,e){return e?i.indexOf(tt.CACHE_KEY)===0&&e.hasOwnProperty("aliases")&&e.hasOwnProperty("preferred_cache")&&e.hasOwnProperty("preferred_network")&&e.hasOwnProperty("canonical_authority")&&e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("aliasesFromNetwork")&&e.hasOwnProperty("endpointsFromNetwork")&&e.hasOwnProperty("expiresAt")&&e.hasOwnProperty("jwks_uri"):!1}function Gn(){return ne()+tt.REFRESH_TIME_SECONDS}function Je(i,e,t){i.authorization_endpoint=e.authorization_endpoint,i.token_endpoint=e.token_endpoint,i.end_session_endpoint=e.end_session_endpoint,i.issuer=e.issuer,i.endpointsFromNetwork=t,i.jwks_uri=e.jwks_uri}function _t(i,e,t){i.aliases=e.aliases,i.preferred_cache=e.preferred_cache,i.preferred_network=e.preferred_network,i.aliasesFromNetwork=t}function qn(i){return i.expiresAt<=ne()}/*! @azure/msal-common v14.16.0 2024-11-05 */const Uo="redirect_uri_empty",bi="claims_request_parsing_error",Lo="authority_uri_insecure",De="url_parse_error",Ho="empty_url_error",Do="empty_input_scopes_error",Ko="invalid_prompt_value",on="invalid_claims",xo="token_request_empty",Fo="logout_request_empty",Bo="invalid_code_challenge_method",rn="pkce_params_missing",an="invalid_cloud_discovery_metadata",Go="invalid_authority_metadata",qo="untrusted_authority",mt="missing_ssh_jwk",zo="missing_ssh_kid",Oi="missing_nonce_authentication_header",Ni="invalid_authentication_header",$o="cannot_set_OIDCOptions",Vo="cannot_allow_native_broker",Qo="authority_mismatch";/*! @azure/msal-common v14.16.0 2024-11-05 */const Pi={[Uo]:"A redirect URI is required for all calls, and none has been set.",[bi]:"Could not parse the given claims request object.",[Lo]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[De]:"URL could not be parsed into appropriate segments.",[Ho]:"URL was empty or null.",[Do]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[Ko]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[on]:"Given claims parameter must be a stringified JSON object.",[xo]:"Token request was empty and not found in cache.",[Fo]:"The logout request was null or undefined.",[Bo]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[rn]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[an]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[Go]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[qo]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[mt]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[zo]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Oi]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[Ni]:"Invalid authentication header provided",[$o]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[Vo]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[Qo]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class sn extends N{constructor(e){super(e,Pi[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,sn.prototype)}}function R(i){return new sn(i)}/*! @azure/msal-common v14.16.0 2024-11-05 */class Y{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return Object.keys(t).length===0}catch{}return!0}static startsWith(e,t){return e.indexOf(t)===0}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),o=r=>decodeURIComponent(r.replace(/\+/g," "));return n.forEach(r=>{if(r.trim()){const[a,s]=r.split(/=(.+)/g,2);a&&s&&(t[o(a)]=o(s))}}),t}static trimArrayEntries(e){return e.map(t=>t.trim())}static removeEmptyStringsFromArray(e){return e.filter(t=>!!t)}static jsonParseHelper(e){try{return JSON.parse(e)}catch{return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class P{constructor(e){const t=e?Y.trimArrayEntries([...e]):[],n=t?Y.removeEmptyStringsFromArray(t):[];this.validateInputScopes(n),this.scopes=new Set,n.forEach(o=>this.scopes.add(o))}static fromString(e){const n=(e||d.EMPTY_STRING).split(" ");return new P(n)}static createSearchScopes(e){const t=new P(e);return t.containsOnlyOIDCScopes()?t.removeScope(d.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw R(Do)}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new P(t);return e?n.scopes.has(e.toLowerCase()):!1}containsScopeSet(e){return!e||e.scopes.size<=0?!1:this.scopes.size>=e.scopes.size&&e.asArray().every(t=>this.containsScope(t))}containsOnlyOIDCScopes(){let e=0;return Mn.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(t=>this.appendScope(t))}catch{throw g(wo)}}removeScope(e){if(!e)throw g(vo);this.scopes.delete(e.trim())}removeOIDCScopes(){Mn.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw g(Ot);const t=new Set;return e.scopes.forEach(n=>t.add(n.toLowerCase())),this.scopes.forEach(n=>t.add(n.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw g(Ot);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),o=this.getScopeCount();return t.size<o+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):d.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}/*! @azure/msal-common v14.16.0 2024-11-05 */function rt(i,e){if(!i)throw g(mo);try{const t=e(i);return JSON.parse(t)}catch{throw g(Yt)}}function ke(i){if(!i)throw g(Yt);const e=i.split(x.CLIENT_INFO_SEPARATOR,2);return{uid:e[0],utid:e.length<2?d.EMPTY_STRING:e[1]}}/*! @azure/msal-common v14.16.0 2024-11-05 */function it(i,e){return!!i&&!!e&&i===e.split(".")[1]}function cn(i,e,t,n){if(n){const{oid:o,sub:r,tid:a,name:s,tfp:c,acr:l}=n,u=a||c||l||"";return{tenantId:u,localAccountId:o||r||"",name:s,isHomeTenant:it(u,i)}}else return{tenantId:t,localAccountId:e,isHomeTenant:it(t,i)}}function ln(i,e,t,n){let o=i;if(e){const{isHomeTenant:r,...a}=e;o={...i,...a}}if(t){const{isHomeTenant:r,...a}=cn(i.homeAccountId,i.localAccountId,i.tenantId,t);return o={...o,...a,idTokenClaims:t,idToken:n},o}return o}/*! @azure/msal-common v14.16.0 2024-11-05 */const Q={Default:0,Adfs:1,Dsts:2,Ciam:3};/*! @azure/msal-common v14.16.0 2024-11-05 */function Yo(i){return i&&(i.tid||i.tfp||i.acr)||null}/*! @azure/msal-common v14.16.0 2024-11-05 */const se={AAD:"AAD",OIDC:"OIDC"};/*! @azure/msal-common v14.16.0 2024-11-05 */class M{generateAccountId(){return[this.homeAccountId,this.environment].join(x.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return M.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(x.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,n){const o=new M;t.authorityType===Q.Adfs?o.authorityType=We.ADFS_ACCOUNT_TYPE:t.protocolMode===se.AAD?o.authorityType=We.MSSTS_ACCOUNT_TYPE:o.authorityType=We.GENERIC_ACCOUNT_TYPE;let r;e.clientInfo&&n&&(r=rt(e.clientInfo,n)),o.clientInfo=e.clientInfo,o.homeAccountId=e.homeAccountId,o.nativeAccountId=e.nativeAccountId;const a=e.environment||t&&t.getPreferredCache();if(!a)throw g(Xt);o.environment=a,o.realm=r?.utid||Yo(e.idTokenClaims)||"",o.localAccountId=r?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const s=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,c=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(o.username=s||c||"",o.name=e.idTokenClaims?.name||"",o.cloudGraphHostName=e.cloudGraphHostName,o.msGraphHost=e.msGraphHost,e.tenantProfiles)o.tenantProfiles=e.tenantProfiles;else{const l=cn(e.homeAccountId,o.localAccountId,o.realm,e.idTokenClaims);o.tenantProfiles=[l]}return o}static createFromAccountInfo(e,t,n){const o=new M;return o.authorityType=e.authorityType||We.GENERIC_ACCOUNT_TYPE,o.homeAccountId=e.homeAccountId,o.localAccountId=e.localAccountId,o.nativeAccountId=e.nativeAccountId,o.realm=e.tenantId,o.environment=e.environment,o.username=e.username,o.name=e.name,o.cloudGraphHostName=t,o.msGraphHost=n,o.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),o}static generateHomeAccountId(e,t,n,o,r){if(!(t===Q.Adfs||t===Q.Dsts)){if(e)try{const a=rt(e,o.base64Decode);if(a.uid&&a.utid)return`${a.uid}.${a.utid}`}catch{}n.warning("No client info in response")}return r?.sub||""}static isAccountEntity(e){return e?e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"):!1}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let o=!0;if(n){const r=e.idTokenClaims||{},a=t.idTokenClaims||{};o=r.iat===a.iat&&r.nonce===a.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&o}}/*! @azure/msal-common v14.16.0 2024-11-05 */function Wo(i){return i.startsWith("#/")?i.substring(2):i.startsWith("#")||i.startsWith("?")?i.substring(1):i}function at(i){if(!i||i.indexOf("=")<0)return null;try{const e=Wo(i),t=Object.fromEntries(new URLSearchParams(e));if(t.code||t.error||t.error_description||t.state)return t}catch{throw g(yo)}return null}/*! @azure/msal-common v14.16.0 2024-11-05 */class S{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw R(Ho);e.includes("#")||(this._urlString=S.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return Y.endsWith(t,"?")?t=t.slice(0,-1):Y.endsWith(t,"?/")&&(t=t.slice(0,-2)),Y.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch{throw R(De)}if(!e.HostNameAndPort||!e.PathSegments)throw R(De);if(!e.Protocol||e.Protocol.toLowerCase()!=="https:")throw R(Lo)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return S.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return e&&n.length!==0&&(n[0]===de.COMMON||n[0]===de.ORGANIZATIONS)&&(n[0]=e),S.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw R(De);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let o=n.AbsolutePath.split("/");return o=o.filter(r=>r&&r.length>0),n.PathSegments=o,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw R(De);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===d.FORWARD_SLASH){const o=new S(t).getUrlComponents();return o.Protocol+"//"+o.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new S(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!at(e)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const jo={endpointMetadata:{"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},instanceDiscoveryMetadata:{metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},zn=jo.endpointMetadata,hn=jo.instanceDiscoveryMetadata,Jo=new Set;hn.metadata.forEach(i=>{i.aliases.forEach(e=>{Jo.add(e)})});function Mi(i,e){let t;const n=i.canonicalAuthority;if(n){const o=new S(n).getUrlComponents().HostNameAndPort;t=$n(o,i.cloudDiscoveryMetadata?.metadata,G.CONFIG,e)||$n(o,hn.metadata,G.HARDCODED_VALUES,e)||i.knownAuthorities}return t||[]}function $n(i,e,t,n){if(n?.trace(`getAliasesFromMetadata called with source: ${t}`),i&&e){const o=st(e,i);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${t}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${t}`)}return null}function Ui(i){return st(hn.metadata,i)}function st(i,e){for(let t=0;t<i.length;t++){const n=i[t];if(n.aliases.includes(e))return n}return null}/*! @azure/msal-common v14.16.0 2024-11-05 */const Xo="cache_quota_exceeded",dn="cache_error_unknown";/*! @azure/msal-common v14.16.0 2024-11-05 */const kt={[Xo]:"Exceeded cache storage capacity.",[dn]:"Unexpected error occurred when using cache storage."};class be extends Error{constructor(e,t){const n=t||(kt[e]?kt[e]:kt[dn]);super(`${e}: ${n}`),Object.setPrototypeOf(this,be.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=n}}/*! @azure/msal-common v14.16.0 2024-11-05 */class Pe{constructor(e,t,n,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(No,en),this.staticAuthorityOptions=o}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort(o=>o.idTokenClaims?-1:1)[0]:t.length===1?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(n=>this.getTenantProfilesFromAccountEntity(n,t?.tenantId,t))}getTenantedAccountInfoByFilter(e,t,n,o){let r=null,a;if(o&&!this.tenantProfileMatchesFilter(n,o))return null;const s=this.getIdToken(e,t,n.tenantId);return s&&(a=Ie(s.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(a,o))?null:(r=ln(e,n,a,s?.secret),r)}getTenantProfilesFromAccountEntity(e,t,n){const o=e.getAccountInfo();let r=o.tenantProfiles||new Map;const a=this.getTokenKeys();if(t){const c=r.get(t);if(c)r=new Map([[t,c]]);else return[]}const s=[];return r.forEach(c=>{const l=this.getTenantedAccountInfoByFilter(o,a,c,n);l&&s.push(l)}),s}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||t.isHomeTenant!==void 0&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!(t&&(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId)||t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint)||t.username&&!this.matchUsername(e.preferred_username,t.username)||t.name&&!this.matchName(e,t.name)||t.sid&&!this.matchSid(e,t.sid)))}async saveCacheRecord(e,t,n){if(!e)throw g(_o);try{e.account&&this.setAccount(e.account),e.idToken&&t?.idToken!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&t?.accessToken!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&t?.refreshToken!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(o){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),o instanceof Error?(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${o.message}`,n),o.name==="QuotaExceededError"||o.name==="NS_ERROR_DOM_QUOTA_REACHED"||o.message.includes("exceeded the quota")?(this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",n),new be(Xo)):new be(o.name,o.message)):(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${o}`,n),new be(dn))}}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),o=P.fromString(e.target),r=[];n.accessToken.forEach(a=>{if(!this.accessTokenKeyMatchesFilter(a,t,!1))return;const s=this.getAccessTokenCredential(a);s&&this.credentialMatchesFilter(s,t)&&P.fromString(s.target).intersectingScopeSets(o)&&r.push(this.removeAccessToken(a))}),await Promise.all(r),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),n=[];return t.forEach(o=>{if(!this.isAccountKey(o,e.homeAccountId))return;const r=this.getAccount(o,this.commonLogger);if(!r||e.homeAccountId&&!this.matchHomeAccountId(r,e.homeAccountId)||e.username&&!this.matchUsername(r.username,e.username)||e.environment&&!this.matchEnvironment(r,e.environment)||e.realm&&!this.matchRealm(r,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(r,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(r,e.authorityType))return;const a={localAccountId:e?.localAccountId,name:e?.name},s=r.tenantProfiles?.filter(c=>this.tenantProfileMatchesFilter(c,a));s&&s.length===0||n.push(r)}),n}isAccountKey(e,t,n){return!(e.split(x.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||n&&!e.toLowerCase().includes(n.toLowerCase()))}isCredentialKey(e){if(e.split(x.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(t.indexOf(I.ID_TOKEN.toLowerCase())===-1&&t.indexOf(I.ACCESS_TOKEN.toLowerCase())===-1&&t.indexOf(I.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())===-1&&t.indexOf(I.REFRESH_TOKEN.toLowerCase())===-1)return!1;if(t.indexOf(I.REFRESH_TOKEN.toLowerCase())>-1){const n=`${I.REFRESH_TOKEN}${x.CACHE_KEY_SEPARATOR}${this.clientId}${x.CACHE_KEY_SEPARATOR}`,o=`${I.REFRESH_TOKEN}${x.CACHE_KEY_SEPARATOR}${Ke}${x.CACHE_KEY_SEPARATOR}`;if(t.indexOf(n.toLowerCase())===-1&&t.indexOf(o.toLowerCase())===-1)return!1}else if(t.indexOf(this.clientId.toLowerCase())===-1)return!1;return!0}credentialMatchesFilter(e,t){return!(t.clientId&&!this.matchClientId(e,t.clientId)||t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash)||typeof t.homeAccountId=="string"&&!this.matchHomeAccountId(e,t.homeAccountId)||t.environment&&!this.matchEnvironment(e,t.environment)||t.realm&&!this.matchRealm(e,t.realm)||t.credentialType&&!this.matchCredentialType(e,t.credentialType)||t.familyId&&!this.matchFamilyId(e,t.familyId)||t.target&&!this.matchTarget(e,t.target)||(t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash||e.credentialType===I.ACCESS_TOKEN_WITH_AUTH_SCHEME&&(t.tokenType&&!this.matchTokenType(e,t.tokenType)||t.tokenType===k.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){const t=this.getKeys(),n={};return t.forEach(o=>{if(!this.isAppMetadata(o))return;const r=this.getAppMetadata(o);r&&(e.environment&&!this.matchEnvironment(r,e.environment)||e.clientId&&!this.matchClientId(r,e.clientId)||(n[o]=r))}),n}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach(o=>{if(!this.isAuthorityMetadata(o)||o.indexOf(this.clientId)===-1)return;const r=this.getAuthorityMetadata(o);r&&r.aliases.indexOf(e)!==-1&&(n=r)}),n}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach(n=>{t.push(this.removeAccount(n))}),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),n=e.generateAccountId(),o=[];t.idToken.forEach(r=>{r.indexOf(n)===0&&this.removeIdToken(r)}),t.accessToken.forEach(r=>{r.indexOf(n)===0&&o.push(this.removeAccessToken(r))}),t.refreshToken.forEach(r=>{r.indexOf(n)===0&&this.removeRefreshToken(r)}),await Promise.all(o)}updateOutdatedCachedAccount(e,t,n){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const o=this.getAccountKeys().filter(l=>l.startsWith(t.homeAccountId)),r=[];o.forEach(l=>{const u=this.getCachedAccountEntity(l);u&&r.push(u)});const a=r.find(l=>it(l.realm,l.homeAccountId))||r[0];a.tenantProfiles=r.map(l=>({tenantId:l.realm,localAccountId:l.localAccountId,name:l.name,isHomeTenant:it(l.realm,l.homeAccountId)}));const s=Pe.toObject(new M,{...a}),c=s.generateAccountKey();return o.forEach(l=>{l!==c&&this.removeOutdatedAccount(e)}),this.setAccount(s),n?.verbose("Updated an outdated account entity in the cache"),s}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===I.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===k.POP){const o=t.keyId;if(o)try{await this.cryptoImpl.removeTokenBindingKey(o)}catch{throw g(bo)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(t=>{this.isAppMetadata(t)&&this.removeItem(t)}),!0}readAccountFromCache(e){const t=M.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,n,o,r){this.commonLogger.trace("CacheManager - getIdToken called");const a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:I.ID_TOKEN,clientId:this.clientId,realm:n},s=this.getIdTokensByFilter(a,t),c=s.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let l=s;if(!n){const u=new Map;s.forEach((f,A)=>{f.realm===e.tenantId&&u.set(A,f)});const p=u.size;if(p<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(p===1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),u.values().next().value;l=u}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),l.forEach((u,p)=>{this.removeIdToken(p)}),o&&r&&o.addFields({multiMatchedID:s.size},r),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t){const n=t&&t.idToken||this.getTokenKeys().idToken,o=new Map;return n.forEach(r=>{if(!this.idTokenKeyMatchesFilter(r,{clientId:this.clientId,...e}))return;const a=this.getIdTokenCredential(r);a&&this.credentialMatchesFilter(a,e)&&o.set(r,a)}),o}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,n,o,r,a){this.commonLogger.trace("CacheManager - getAccessToken called");const s=P.createSearchScopes(t.scopes),c=t.authenticationScheme||k.BEARER,l=c.toLowerCase()!==k.BEARER.toLowerCase()?I.ACCESS_TOKEN_WITH_AUTH_SCHEME:I.ACCESS_TOKEN,u={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:l,clientId:this.clientId,realm:o||e.tenantId,target:s,tokenType:c,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},p=n&&n.accessToken||this.getTokenKeys().accessToken,f=[];p.forEach(_=>{if(this.accessTokenKeyMatchesFilter(_,u,!0)){const v=this.getAccessTokenCredential(_);v&&this.credentialMatchesFilter(v,u)&&f.push(v)}});const A=f.length;return A<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):A>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),f.forEach(_=>{this.removeAccessToken(_e(_))}),r&&a&&r.addFields({multiMatchedAT:f.length},a),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),f[0])}accessTokenKeyMatchesFilter(e,t,n){const o=e.toLowerCase();if(t.clientId&&o.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&o.indexOf(t.homeAccountId.toLowerCase())===-1||t.realm&&o.indexOf(t.realm.toLowerCase())===-1||t.requestedClaimsHash&&o.indexOf(t.requestedClaimsHash.toLowerCase())===-1)return!1;if(t.target){const r=t.target.asArray();for(let a=0;a<r.length;a++){if(n&&!o.includes(r[a].toLowerCase()))return!1;if(!n&&o.includes(r[a].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),n=[];return t.accessToken.forEach(o=>{if(!this.accessTokenKeyMatchesFilter(o,e,!0))return;const r=this.getAccessTokenCredential(o);r&&this.credentialMatchesFilter(r,e)&&n.push(r)}),n}getRefreshToken(e,t,n,o,r){this.commonLogger.trace("CacheManager - getRefreshToken called");const a=t?Ke:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:I.REFRESH_TOKEN,clientId:this.clientId,familyId:a},c=n&&n.refreshToken||this.getTokenKeys().refreshToken,l=[];c.forEach(p=>{if(this.refreshTokenKeyMatchesFilter(p,s)){const f=this.getRefreshTokenCredential(p);f&&this.credentialMatchesFilter(f,s)&&l.push(f)}});const u=l.length;return u<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(u>1&&o&&r&&o.addFields({multiMatchedRT:u},r),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),l[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&n.indexOf(t.familyId.toLowerCase())===-1||!t.familyId&&t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),o=Object.keys(n).map(a=>n[a]),r=o.length;if(r<1)return null;if(r>1)throw g(Eo);return o[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!!(t&&t.familyId===Ke)}matchHomeAccountId(e,t){return typeof e.homeAccountId=="string"&&t===e.homeAccountId}matchLocalAccountIdFromTokenClaims(e,t){const n=e.oid||e.sub;return t===n}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return t.toLowerCase()===e.name?.toLowerCase()}matchUsername(e,t){return!!(e&&typeof e=="string"&&t?.toLowerCase()===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const o=Mi(this.staticAuthorityOptions,this.commonLogger);if(o.includes(t)&&o.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){return e.realm?.toLowerCase()===t.toLowerCase()}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return e.credentialType!==I.ACCESS_TOKEN&&e.credentialType!==I.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target?!1:P.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return e.indexOf(Vt)!==-1}isAuthorityMetadata(e){return e.indexOf(tt.CACHE_KEY)!==-1}generateAuthorityMetadataCacheKey(e){return`${tt.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class Li extends Pe{setAccount(){throw g(E)}getAccount(){throw g(E)}getCachedAccountEntity(){throw g(E)}setIdTokenCredential(){throw g(E)}getIdTokenCredential(){throw g(E)}setAccessTokenCredential(){throw g(E)}getAccessTokenCredential(){throw g(E)}setRefreshTokenCredential(){throw g(E)}getRefreshTokenCredential(){throw g(E)}setAppMetadata(){throw g(E)}getAppMetadata(){throw g(E)}setServerTelemetry(){throw g(E)}getServerTelemetry(){throw g(E)}setAuthorityMetadata(){throw g(E)}getAuthorityMetadata(){throw g(E)}getAuthorityMetadataKeys(){throw g(E)}setThrottlingCache(){throw g(E)}getThrottlingCache(){throw g(E)}removeItem(){throw g(E)}getKeys(){throw g(E)}getAccountKeys(){throw g(E)}getTokenKeys(){throw g(E)}updateCredentialCacheKey(){throw g(E)}removeOutdatedAccount(){throw g(E)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const Zo={tokenRenewalOffsetSeconds:oi,preventCorsPreflight:!1},Hi={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:O.Info,correlationId:d.EMPTY_STRING},Di={claimsBasedCachingEnabled:!1},Ki={async sendGetRequestAsync(){throw g(E)},async sendPostRequestAsync(){throw g(E)}},xi={sku:d.SKU,version:en,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},Fi={clientSecret:d.EMPTY_STRING,clientAssertion:void 0},Bi={azureCloudInstance:tn.None,tenant:`${d.DEFAULT_COMMON_TENANT}`},Gi={application:{appName:"",appVersion:""}};function qi({authOptions:i,systemOptions:e,loggerOptions:t,cacheOptions:n,storageInterface:o,networkInterface:r,cryptoInterface:a,clientCredentials:s,libraryInfo:c,telemetry:l,serverTelemetryManager:u,persistencePlugin:p,serializableCache:f}){const A={...Hi,...t};return{authOptions:zi(i),systemOptions:{...Zo,...e},loggerOptions:A,cacheOptions:{...Di,...n},storageInterface:o||new Li(i.clientId,ot,new ue(A)),networkInterface:r||Ki,cryptoInterface:a||ot,clientCredentials:s||Fi,libraryInfo:{...xi,...c},telemetry:{...Gi,...l},serverTelemetryManager:u||null,persistencePlugin:p||null,serializableCache:f||null}}function zi(i){return{clientCapabilities:[],azureCloudOptions:Bi,skipAuthorityMetadataCache:!1,instanceAware:!1,...i}}function Lt(i){return i.authOptions.authority.options.protocolMode===se.OIDC}/*! @azure/msal-common v14.16.0 2024-11-05 */const $={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"};/*! @azure/msal-common v14.16.0 2024-11-05 */const fe="client_id",er="redirect_uri",Vn="response_type",$i="response_mode",Vi="grant_type",Qi="claims",Yi="scope",Wi="refresh_token",ji="state",Ji="nonce",Xi="prompt",Zi="code",ea="code_challenge",ta="code_challenge_method",na="code_verifier",oa="client-request-id",ra="x-client-SKU",ia="x-client-VER",aa="x-client-OS",sa="x-client-CPU",ca="x-client-current-telemetry",la="x-client-last-telemetry",ha="x-ms-lib-capability",da="x-app-name",ua="x-app-ver",ga="post_logout_redirect_uri",ma="id_token_hint",pa="device_code",fa="client_secret",Ca="client_assertion",ya="client_assertion_type",Qn="token_type",Yn="req_cnf",Ta="assertion",Ia="requested_token_use",Wn="return_spa_code",Aa="nativebroker",Ea="logout_hint",Sa="sid",va="login_hint",wa="domain_hint",_a="x-client-xtra-sku",un="brk_client_id",Ht="brk_redirect_uri";/*! @azure/msal-common v14.16.0 2024-11-05 */class Se{static validateRedirectUri(e){if(!e)throw R(Uo)}static validatePrompt(e){const t=[];for(const n in L)t.push(L[n]);if(t.indexOf(e)<0)throw R(Ko)}static validateClaims(e){try{JSON.parse(e)}catch{throw R(on)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw R(rn);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([Un.PLAIN,Un.S256].indexOf(e)<0)throw R(Bo)}}/*! @azure/msal-common v14.16.0 2024-11-05 */function ka(i,e,t){if(!e)return;const n=i.get(fe);n&&i.has(un)&&t?.addFields({embeddedClientId:n,embeddedRedirectUri:i.get(er)},e)}class Fe{constructor(e,t){this.parameters=new Map,this.performanceClient=t,this.correlationId=e}addResponseTypeCode(){this.parameters.set(Vn,encodeURIComponent(d.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(Vn,encodeURIComponent(`${d.TOKEN_RESPONSE_TYPE} ${d.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set($i,encodeURIComponent(e||ei.QUERY))}addNativeBroker(){this.parameters.set(Aa,encodeURIComponent("1"))}addScopes(e,t=!0,n=Le){t&&!n.includes("openid")&&!e.includes("openid")&&n.push("openid");const o=t?[...e||[],...n]:e||[],r=new P(o);this.parameters.set(Yi,encodeURIComponent(r.printScopes()))}addClientId(e){this.parameters.set(fe,encodeURIComponent(e))}addRedirectUri(e){Se.validateRedirectUri(e),this.parameters.set(er,encodeURIComponent(e))}addPostLogoutRedirectUri(e){Se.validateRedirectUri(e),this.parameters.set(ga,encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set(ma,encodeURIComponent(e))}addDomainHint(e){this.parameters.set(wa,encodeURIComponent(e))}addLoginHint(e){this.parameters.set(va,encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(F.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(F.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set(Sa,encodeURIComponent(e))}addClaims(e,t){const n=this.addClientCapabilitiesToClaims(e,t);Se.validateClaims(n),this.parameters.set(Qi,encodeURIComponent(n))}addCorrelationId(e){this.parameters.set(oa,encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set(ra,e.sku),this.parameters.set(ia,e.version),e.os&&this.parameters.set(aa,e.os),e.cpu&&this.parameters.set(sa,e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set(da,e.appName),e?.appVersion&&this.parameters.set(ua,e.appVersion)}addPrompt(e){Se.validatePrompt(e),this.parameters.set(`${Xi}`,encodeURIComponent(e))}addState(e){e&&this.parameters.set(ji,encodeURIComponent(e))}addNonce(e){this.parameters.set(Ji,encodeURIComponent(e))}addCodeChallengeParams(e,t){if(Se.validateCodeChallengeParams(e,t),e&&t)this.parameters.set(ea,encodeURIComponent(e)),this.parameters.set(ta,encodeURIComponent(t));else throw R(rn)}addAuthorizationCode(e){this.parameters.set(Zi,encodeURIComponent(e))}addDeviceCode(e){this.parameters.set(pa,encodeURIComponent(e))}addRefreshToken(e){this.parameters.set(Wi,encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set(na,encodeURIComponent(e))}addClientSecret(e){this.parameters.set(fa,encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set(Ca,encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set(ya,encodeURIComponent(e))}addOboAssertion(e){this.parameters.set(Ta,encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set(Ia,encodeURIComponent(e))}addGrantType(e){this.parameters.set(Vi,encodeURIComponent(e))}addClientInfo(){this.parameters.set(ti,"1")}addExtraQueryParameters(e){Object.entries(e).forEach(([t,n])=>{!this.parameters.has(t)&&n&&this.parameters.set(t,n)})}addClientCapabilitiesToClaims(e,t){let n;if(!e)n={};else try{n=JSON.parse(e)}catch{throw R(on)}return t&&t.length>0&&(n.hasOwnProperty(Ye.ACCESS_TOKEN)||(n[Ye.ACCESS_TOKEN]={}),n[Ye.ACCESS_TOKEN][Ye.XMS_CC]={values:t}),JSON.stringify(n)}addUsername(e){this.parameters.set(Hn.username,encodeURIComponent(e))}addPassword(e){this.parameters.set(Hn.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(Qn,k.POP),this.parameters.set(Yn,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(Qn,k.SSH),this.parameters.set(Yn,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set(ca,e.generateCurrentRequestHeaderValue()),this.parameters.set(la,e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set(ha,xe.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set(Ea,encodeURIComponent(e))}addBrokerParameters(e){const t={};t[un]=e.brokerClientId,t[Ht]=e.brokerRedirectUri,this.addExtraQueryParameters(t)}createQueryString(){const e=new Array;return this.parameters.forEach((t,n)=>{e.push(`${n}=${t}`)}),ka(this.parameters,this.correlationId,this.performanceClient),e.join("&")}}/*! @azure/msal-common v14.16.0 2024-11-05 */function Ra(i){return i.hasOwnProperty("authorization_endpoint")&&i.hasOwnProperty("token_endpoint")&&i.hasOwnProperty("issuer")&&i.hasOwnProperty("jwks_uri")}/*! @azure/msal-common v14.16.0 2024-11-05 */function ba(i){return i.hasOwnProperty("tenant_discovery_endpoint")&&i.hasOwnProperty("metadata")}/*! @azure/msal-common v14.16.0 2024-11-05 */function Oa(i){return i.hasOwnProperty("error")&&i.hasOwnProperty("error_description")}/*! @azure/msal-common v14.16.0 2024-11-05 */const h={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",NetworkClientSendPostRequestAsync:"networkClientSendPostRequestAsync",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},Na={InProgress:1};/*! @azure/msal-common v14.16.0 2024-11-05 */const Ae=(i,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const a=n?.startMeasurement(e,o);if(o){const s=e+"CallCount";n?.incrementFields({[s]:1},o)}try{const s=i(...r);return a?.end({success:!0}),t.trace(`Returning result from ${e}`),s}catch(s){t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(s))}catch{t.trace("Unable to print error message.")}throw a?.end({success:!1},s),s}},m=(i,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const a=n?.startMeasurement(e,o);if(o){const s=e+"CallCount";n?.incrementFields({[s]:1},o)}return n?.setPreQueueTime(e,o),i(...r).then(s=>(t.trace(`Returning result from ${e}`),a?.end({success:!0}),s)).catch(s=>{t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(s))}catch{t.trace("Unable to print error message.")}throw a?.end({success:!1},s),s})};/*! @azure/msal-common v14.16.0 2024-11-05 */class pt{constructor(e,t,n,o){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=o}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=Ee.ENVIRONMENT_VARIABLE;else{const o=pt.IMDS_OPTIONS;try{const r=await m(this.getRegionFromIMDS.bind(this),h.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(d.IMDS_VERSION,o);if(r.status===je.httpSuccess&&(n=r.body,t.region_source=Ee.IMDS),r.status===je.httpBadRequest){const a=await m(this.getCurrentVersion.bind(this),h.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(o);if(!a)return t.region_source=Ee.FAILED_AUTO_DETECTION,null;const s=await m(this.getRegionFromIMDS.bind(this),h.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(a,o);s.status===je.httpSuccess&&(n=s.body,t.region_source=Ee.IMDS)}}catch{return t.region_source=Ee.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=Ee.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,d.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(h.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${d.IMDS_ENDPOINT}?format=json`,e);return t.status===je.httpBadRequest&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch{return null}}}pt.IMDS_OPTIONS={headers:{Metadata:"true"}};/*! @azure/msal-common v14.16.0 2024-11-05 */class K{constructor(e,t,n,o,r,a,s,c){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=o,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=r,this.performanceClient=s,this.correlationId=a,this.managedIdentity=c||!1,this.regionDiscovery=new pt(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(d.CIAM_AUTH_URL))return Q.Ciam;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case d.ADFS:return Q.Adfs;case d.DSTS:return Q.Dsts}return Q.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new S(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw g(re)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw g(re)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw g(re)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw g(Oo);return this.replacePath(this.metadata.end_session_endpoint)}else throw g(re)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw g(re)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw g(re)}canReplaceTenant(e){return e.PathSegments.length===1&&!K.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===Q.Default&&this.protocolMode===se.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const o=new S(this.metadata.canonical_authority).getUrlComponents(),r=o.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((s,c)=>{let l=r[c];if(c===0&&this.canReplaceTenant(o)){const u=new S(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];l!==u&&(this.logger.verbose(`Replacing tenant domain name ${l} with id ${u}`),l=u)}s!==l&&(t=t.replace(`/${l}/`,`/${s}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===Q.Adfs||this.protocolMode!==se.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(h.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await m(this.updateCloudDiscoveryMetadata.bind(this),h.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await m(this.updateEndpointMetadata.bind(this),h.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:n},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:Gn(),jwks_uri:""}),e}updateCachedMetadata(e,t,n){t!==G.CACHE&&n?.source!==G.CACHE&&(e.expiresAt=Gn(),e.canonical_authority=this.canonicalAuthority);const o=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(o,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===G.HARDCODED_VALUES&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata){const o=await m(this.updateMetadataWithRegionalInformation.bind(this),h.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata);Je(e,o,!1),e.canonical_authority=this.canonicalAuthority}return t.source}let n=await m(this.getEndpointMetadataFromNetwork.bind(this),h.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(n=await m(this.updateMetadataWithRegionalInformation.bind(this),h.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(n)),Je(e,n,!0),G.NETWORK;throw g(Co,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),Je(e,t,!1),{source:G.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const o=this.getEndpointMetadataFromHardcodedValues();if(o)return Je(e,o,!1),{source:G.HARDCODED_VALUES,metadata:o};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=qn(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:G.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new S(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch{throw R(Go)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(h.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const n=await this.networkInterface.sendGetRequestAsync(t,e);return Ra(n.body)?n.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(n){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${n}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in zn?zn[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==d.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=wt.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,K.replaceWithRegionalInformation(e,t);const n=await m(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),h.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome=wt.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=n,K.replaceWithRegionalInformation(e,n);this.regionDiscoveryMetadata.region_outcome=wt.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(h.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await m(this.getCloudDiscoveryMetadataFromNetwork.bind(this),h.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return _t(e,n,!0),G.NETWORK;throw R(qo)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||d.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||d.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),_t(e,t,!1),G.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const o=Ui(this.hostnameAndPort);if(o)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),_t(e,o,!1),G.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const n=qn(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),G.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===Q.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),K.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=st(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch{throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),R(an)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),K.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(h.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${d.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const o=await this.networkInterface.sendGetRequestAsync(e,t);let r,a;if(ba(o.body))r=o.body,a=r.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${r.tenant_discovery_endpoint}`);else if(Oa(o.body)){if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${o.status}`),r=o.body,r.error===d.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${r.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${r.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),a=[]}else return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=st(a,this.hostnameAndPort)}catch(o){if(o instanceof N)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${o.errorCode}
Error Description: ${o.errorMessage}`);else{const r=o;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${r.name}
Error Description: ${r.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=K.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(t=>t&&S.getDomainFromUrl(t).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==tn.None){const o=t.tenant?t.tenant:d.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${o}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return d.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw g(re)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Jo.has(e)}static isPublicCloudAuthority(e){return d.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const o=new S(e);o.validateAsUri();const r=o.getUrlComponents();let a=`${t}.${r.HostNameAndPort}`;this.isPublicCloudAuthority(r.HostNameAndPort)&&(a=`${t}.${d.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const s=S.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:a}).urlString;return n?`${s}?${n}`:s}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=K.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=K.buildRegionalAuthorityString(n.token_endpoint,t),n.end_session_endpoint&&(n.end_session_endpoint=K.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const o=new S(e).getUrlComponents();if(o.PathSegments.length===0&&o.HostNameAndPort.endsWith(d.CIAM_AUTH_URL)){const r=o.HostNameAndPort.split(".")[0];t=`${t}${r}${d.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}K.reservedTenantDomains=new Set(["{tenant}","{tenantid}",de.COMMON,de.CONSUMERS,de.ORGANIZATIONS]);function Pa(i){const n=new S(i).getUrlComponents().PathSegments.slice(-1)[0]?.toLowerCase();switch(n){case de.COMMON:case de.ORGANIZATIONS:case de.CONSUMERS:return;default:return n}}function tr(i){return i.endsWith(d.FORWARD_SLASH)?i:`${i}${d.FORWARD_SLASH}`}function Ma(i){const e=i.cloudDiscoveryMetadata;let t;if(e)try{t=JSON.parse(e)}catch{throw R(an)}return{canonicalAuthority:i.authority?tr(i.authority):void 0,knownAuthorities:i.knownAuthorities,cloudDiscoveryMetadata:t}}/*! @azure/msal-common v14.16.0 2024-11-05 */async function nr(i,e,t,n,o,r,a){a?.addQueueMeasurement(h.AuthorityFactoryCreateDiscoveredInstance,r);const s=K.transformCIAMAuthority(tr(i)),c=new K(s,e,t,n,o,r,a);try{return await m(c.resolveEndpointsAsync.bind(c),h.AuthorityResolveEndpointsAsync,o,a,r)(),c}catch{throw g(re)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class ge extends N{constructor(e,t,n,o,r){super(e,t,n),this.name="ServerError",this.errorNo=o,this.status=r,Object.setPrototypeOf(this,ge.prototype)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class X{static generateThrottlingStorageKey(e){return`${xe.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){const n=X.generateThrottlingStorageKey(t),o=e.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now()){e.removeItem(n);return}throw new ge(o.errorCodes?.join(" ")||d.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,n){if(X.checkResponseStatus(n)||X.checkResponseForRetryAfter(n)){const o={throttleTime:X.calculateThrottleTime(parseInt(n.headers[F.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(X.generateThrottlingStorageKey(t),o)}}static checkResponseStatus(e){return e.status===429||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return e.headers?e.headers.hasOwnProperty(F.RETRY_AFTER)&&(e.status<200||e.status>=300):!1}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(Math.min(n+(t||xe.DEFAULT_THROTTLE_TIME_SECONDS),n+xe.DEFAULT_MAX_THROTTLE_TIME_SECONDS)*1e3)}static removeThrottle(e,t,n,o){const r={clientId:t,authority:n.authority,scopes:n.scopes,homeAccountIdentifier:o,claims:n.claims,authenticationScheme:n.authenticationScheme,resourceRequestMethod:n.resourceRequestMethod,resourceRequestUri:n.resourceRequestUri,shrClaims:n.shrClaims,sshKid:n.sshKid},a=this.generateThrottlingStorageKey(r);e.removeItem(a)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class ft extends N{constructor(e,t,n){super(e.errorCode,e.errorMessage,e.subError),Object.setPrototypeOf(this,ft.prototype),this.name="NetworkError",this.error=e,this.httpStatus=t,this.responseHeaders=n}}function jn(i,e,t){return new ft(i,e,t)}/*! @azure/msal-common v14.16.0 2024-11-05 */class gn{constructor(e,t){this.config=qi(e),this.logger=new ue(this.config.loggerOptions,No,en),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[F.CONTENT_TYPE]=d.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case $.HOME_ACCOUNT_ID:try{const n=ke(e.credential);t[F.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case $.UPN:t[F.CCS_HEADER]=`UPN: ${e.credential}`;break}return t}async executePostToTokenEndpoint(e,t,n,o,r,a){a&&this.performanceClient?.addQueueMeasurement(a,r);const s=await this.sendPostRequest(o,e,{body:t,headers:n},r);return this.config.serverTelemetryManager&&s.status<500&&s.status!==429&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async sendPostRequest(e,t,n,o){X.preProcess(this.cacheManager,e);let r;try{r=await m(this.networkClient.sendPostRequestAsync.bind(this.networkClient),h.NetworkClientSendPostRequestAsync,this.logger,this.performanceClient,o)(t,n);const a=r.headers||{};this.performanceClient?.addFields({refreshTokenSize:r.body.refresh_token?.length||0,httpVerToken:a[F.X_MS_HTTP_VERSION]||"",requestId:a[F.X_MS_REQUEST_ID]||""},o)}catch(a){if(a instanceof ft){const s=a.responseHeaders;throw s&&this.performanceClient?.addFields({httpVerToken:s[F.X_MS_HTTP_VERSION]||"",requestId:s[F.X_MS_REQUEST_ID]||"",contentTypeHeader:s[F.CONTENT_TYPE]||void 0,contentLengthHeader:s[F.CONTENT_LENGTH]||void 0,httpStatus:a.httpStatus},o),a.error}throw a instanceof N?a:g(fo)}return X.postProcess(this.cacheManager,e,r),r}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(h.UpdateTokenEndpointAuthority,t);const n=`https://${e}/${this.authority.tenant}/`,o=await nr(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=o}createTokenQueryParameters(e){const t=new Fe(e.correlationId,this.performanceClient);return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.addCorrelationId(e.correlationId),t.createQueryString()}}/*! @azure/msal-common v14.16.0 2024-11-05 */const ct="no_tokens_found",or="native_account_unavailable",mn="refresh_token_expired",Ua="interaction_required",La="consent_required",Ha="login_required",Ct="bad_token";/*! @azure/msal-common v14.16.0 2024-11-05 */const Jn=[Ua,La,Ha,Ct],Da=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],Ka={[ct]:"No refresh token found in the cache. Please sign-in.",[or]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[mn]:"Refresh token has expired.",[Ct]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};class j extends N{constructor(e,t,n,o,r,a,s,c){super(e,t,n),Object.setPrototypeOf(this,j.prototype),this.timestamp=o||d.EMPTY_STRING,this.traceId=r||d.EMPTY_STRING,this.correlationId=a||d.EMPTY_STRING,this.claims=s||d.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function Xn(i,e,t){const n=!!i&&Jn.indexOf(i)>-1,o=!!t&&Da.indexOf(t)>-1,r=!!e&&Jn.some(a=>e.indexOf(a)>-1);return n||r||o}function Dt(i){return new j(i,Ka[i])}/*! @azure/msal-common v14.16.0 2024-11-05 */class W{static setRequestState(e,t,n){const o=W.generateLibraryState(e,n);return t?`${o}${d.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw g(Pt);const n={id:e.createNewGuid()};t&&(n.meta=t);const o=JSON.stringify(n);return e.base64Encode(o)}static parseRequestState(e,t){if(!e)throw g(Pt);if(!t)throw g(Ne);try{const n=t.split(d.RESOURCE_DELIM),o=n[0],r=n.length>1?n.slice(1).join(d.RESOURCE_DELIM):d.EMPTY_STRING,a=e.base64Decode(o),s=JSON.parse(a);return{userRequestState:r||d.EMPTY_STRING,libraryState:s}}catch{throw g(Ne)}}}/*! @azure/msal-common v14.16.0 2024-11-05 */const xa={SW:"sw"};class Me{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(h.PopTokenGenerateCnf,e.correlationId);const n=await m(this.generateKid.bind(this),h.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),o=this.cryptoUtils.base64UrlEncode(JSON.stringify(n));return{kid:n.kid,reqCnfString:o}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(h.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:xa.SW}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,o){const{resourceRequestMethod:r,resourceRequestUri:a,shrClaims:s,shrNonce:c,shrOptions:l}=n,p=(a?new S(a):void 0)?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:ne(),m:r?.toUpperCase(),u:p?.HostNameAndPort,nonce:c||this.cryptoUtils.createNewGuid(),p:p?.AbsolutePath,q:p?.QueryString?[[],p.QueryString]:void 0,client_claims:s||void 0,...o},t,l,n.correlationId)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class Fa{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}/*! @azure/msal-common v14.16.0 2024-11-05 */function Ba(i){const e="code=",t=i.error_uri?.lastIndexOf(e);return t&&t>=0?i.error_uri?.substring(t+e.length):void 0}class Ce{constructor(e,t,n,o,r,a,s){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=o,this.serializableCache=r,this.persistencePlugin=a,this.performanceClient=s}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?g(nt,"Cached State"):g(nt,"Server State");let n,o;try{n=decodeURIComponent(e.state)}catch{throw g(Ne,e.state)}try{o=decodeURIComponent(t)}catch{throw g(Ne,e.state)}if(n!==o)throw g(To);if(e.error||e.error_description||e.suberror){const r=Ba(e);throw Xn(e.error,e.error_description,e.suberror)?new j(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",r):new ge(e.error||"",e.error_description,e.suberror,r)}}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const n=`Error(s): ${e.error_codes||d.NOT_AVAILABLE} - Timestamp: ${e.timestamp||d.NOT_AVAILABLE} - Description: ${e.error_description||d.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||d.NOT_AVAILABLE} - Trace ID: ${e.trace_id||d.NOT_AVAILABLE}`,o=e.error_codes?.length?e.error_codes[0]:void 0,r=new ge(e.error,n,e.suberror,o,e.status);if(t&&e.status&&e.status>=Qe.SERVER_ERROR_RANGE_START&&e.status<=Qe.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${r}`);return}else if(t&&e.status&&e.status>=Qe.CLIENT_ERROR_RANGE_START&&e.status<=Qe.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${r}`);return}throw Xn(e.error,e.error_description,e.suberror)?new j(e.error,e.error_description,e.suberror,e.timestamp||d.EMPTY_STRING,e.trace_id||d.EMPTY_STRING,e.correlation_id||d.EMPTY_STRING,e.claims||d.EMPTY_STRING,o):r}}async handleServerTokenResponse(e,t,n,o,r,a,s,c,l){this.performanceClient?.addQueueMeasurement(h.HandleServerTokenResponse,e.correlation_id);let u;if(e.id_token){if(u=Ie(e.id_token||d.EMPTY_STRING,this.cryptoObj.base64Decode),r&&r.nonce&&u.nonce!==r.nonce)throw g(Io);if(o.maxAge||o.maxAge===0){const _=u.auth_time;if(!_)throw g(jt);Po(_,o.maxAge)}}this.homeAccountIdentifier=M.generateHomeAccountId(e.client_info||d.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,u);let p;r&&r.state&&(p=W.parseRequestState(this.cryptoObj,r.state)),e.key_id=e.key_id||o.sshKid||void 0;const f=this.generateCacheRecord(e,t,n,o,u,a,r);let A;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),A=new Fa(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(A)),s&&!c&&f.account){const _=f.account.generateAccountKey();if(!this.cacheStorage.getAccount(_,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await Ce.generateAuthenticationResult(this.cryptoObj,t,f,!1,o,u,p,void 0,l)}await this.cacheStorage.saveCacheRecord(f,o.storeInCache,o.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&A&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(A))}return Ce.generateAuthenticationResult(this.cryptoObj,t,f,!1,o,u,p,e,l)}generateCacheRecord(e,t,n,o,r,a,s){const c=t.getPreferredCache();if(!c)throw g(Xt);const l=Yo(r);let u,p;e.id_token&&r&&(u=ut(this.homeAccountIdentifier,c,e.id_token,this.clientId,l||""),p=pn(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,r,e.client_info,c,l,s,void 0,this.logger));let f=null;if(e.access_token){const v=e.scope?P.fromString(e.scope):new P(o.scopes||[]),D=(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,V=(typeof e.ext_expires_in=="string"?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,me=(typeof e.refresh_in=="string"?parseInt(e.refresh_in,10):e.refresh_in)||void 0,$e=n+D,vt=$e+V,Ve=me&&me>0?n+me:void 0;f=gt(this.homeAccountIdentifier,c,e.access_token,this.clientId,l||t.tenant||"",v.printScopes(),$e,vt,this.cryptoObj.base64Decode,Ve,e.token_type,a,e.key_id,o.claims,o.requestedClaimsHash)}let A=null;if(e.refresh_token){let v;if(e.refresh_token_expires_in){const D=typeof e.refresh_token_expires_in=="string"?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in;v=n+D}A=Mo(this.homeAccountIdentifier,c,e.refresh_token,this.clientId,e.foci,a,v)}let _=null;return e.foci&&(_={clientId:this.clientId,environment:c,familyId:e.foci}),{account:p,idToken:u,accessToken:f,refreshToken:A,appMetadata:_}}static async generateAuthenticationResult(e,t,n,o,r,a,s,c,l){let u=d.EMPTY_STRING,p=[],f=null,A,_,v=d.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType===k.POP&&!r.popKid){const $e=new Me(e),{secret:vt,keyId:Ve}=n.accessToken;if(!Ve)throw g(Zt);u=await $e.signPopToken(vt,Ve,r)}else u=n.accessToken.secret;p=P.fromString(n.accessToken.target).asArray(),f=new Date(Number(n.accessToken.expiresOn)*1e3),A=new Date(Number(n.accessToken.extendedExpiresOn)*1e3),n.accessToken.refreshOn&&(_=new Date(Number(n.accessToken.refreshOn)*1e3))}n.appMetadata&&(v=n.appMetadata.familyId===Ke?Ke:"");const D=a?.oid||a?.sub||"",V=a?.tid||"";c?.spa_accountid&&n.account&&(n.account.nativeAccountId=c?.spa_accountid);const me=n.account?ln(n.account.getAccountInfo(),void 0,a,n.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:D,tenantId:V,scopes:p,account:me,idToken:n?.idToken?.secret||"",idTokenClaims:a||{},accessToken:u,fromCache:o,expiresOn:f,extExpiresOn:A,refreshOn:_,correlationId:r.correlationId,requestId:l||d.EMPTY_STRING,familyId:v,tokenType:n.accessToken?.tokenType||d.EMPTY_STRING,state:s?s.userRequestState:d.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||d.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||d.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function pn(i,e,t,n,o,r,a,s,c,l,u){u?.verbose("setCachedAccount called");const f=i.getAccountKeys().find(V=>V.startsWith(t));let A=null;f&&(A=i.getAccount(f,u));const _=A||M.createAccount({homeAccountId:t,idTokenClaims:o,clientInfo:r,environment:a,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:l},e,n),v=_.tenantProfiles||[],D=s||_.realm;if(D&&!v.find(V=>V.tenantId===D)){const V=cn(t,_.localAccountId,D,o);v.push(V)}return _.tenantProfiles=v,_}/*! @azure/msal-common v14.16.0 2024-11-05 */async function rr(i,e,t){return typeof i=="string"?i:i({clientId:e,tokenEndpoint:t})}/*! @azure/msal-common v14.16.0 2024-11-05 */class ir extends gn{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(h.GetAuthCodeUrl,e.correlationId);const t=await m(this.createAuthCodeUrlQueryString.bind(this),h.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return S.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(h.AuthClientAcquireToken,e.correlationId),!e.code)throw g(So);const n=ne(),o=await m(this.executeTokenRequest.bind(this),h.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),r=o.headers?.[F.X_MS_REQUEST_ID],a=new Ce(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return a.validateTokenResponse(o.body),m(a.handleServerTokenResponse.bind(a),h.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(o.body,this.authority,n,e,t,void 0,void 0,void 0,r)}handleFragmentResponse(e,t){if(new Ce(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw g(Ro);return e}getLogoutUri(e){if(!e)throw R(Fo);const t=this.createLogoutUrlQueryString(e);return S.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(h.AuthClientExecuteTokenRequest,t.correlationId);const n=this.createTokenQueryParameters(t),o=S.appendQueryString(e.tokenEndpoint,n),r=await m(this.createTokenRequestBody.bind(this),h.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let a;if(t.clientInfo)try{const l=rt(t.clientInfo,this.cryptoUtils.base64Decode);a={credential:`${l.uid}${x.CLIENT_INFO_SEPARATOR}${l.utid}`,type:$.HOME_ACCOUNT_ID}}catch(l){this.logger.verbose("Could not parse client info for CCS Header: "+l)}const s=this.createTokenRequestHeaders(a||t.ccsCredential),c={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return m(this.executePostToTokenEndpoint.bind(this),h.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(o,r,s,c,t.correlationId,h.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(h.AuthClientCreateTokenRequestBody,e.correlationId);const t=new Fe(e.correlationId,this.performanceClient);if(t.addClientId(e.embeddedClientId||e.tokenBodyParameters?.[fe]||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):Se.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!Lt(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const o=this.config.clientCredentials.clientAssertion;t.addClientAssertion(await rr(o.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),t.addClientAssertionType(o.assertionType)}if(t.addGrantType(uo.AUTHORIZATION_CODE_GRANT),t.addClientInfo(),e.authenticationScheme===k.POP){const o=new Me(this.cryptoUtils,this.performanceClient);let r;e.popKid?r=this.cryptoUtils.encodeKid(e.popKid):r=(await m(o.generateCnf.bind(o),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(r)}else if(e.authenticationScheme===k.SSH)if(e.sshJwk)t.addSshJwk(e.sshJwk);else throw R(mt);(!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities);let n;if(e.clientInfo)try{const o=rt(e.clientInfo,this.cryptoUtils.base64Decode);n={credential:`${o.uid}${x.CLIENT_INFO_SEPARATOR}${o.utid}`,type:$.HOME_ACCOUNT_ID}}catch(o){this.logger.verbose("Could not parse client info for CCS Header: "+o)}else n=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&n)switch(n.type){case $.HOME_ACCOUNT_ID:try{const o=ke(n.credential);t.addCcsOid(o)}catch(o){this.logger.verbose("Could not parse home account ID for CCS Header: "+o)}break;case $.UPN:t.addCcsUpn(n.credential);break}return e.embeddedClientId&&t.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),e.enableSpaAuthorizationCode&&(!e.tokenBodyParameters||!e.tokenBodyParameters[Wn])&&t.addExtraQueryParameters({[Wn]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){const t=e.correlationId||this.config.cryptoInterface.createNewGuid();this.performanceClient?.addQueueMeasurement(h.AuthClientCreateQueryString,t);const n=new Fe(t,this.performanceClient);n.addClientId(e.embeddedClientId||e.extraQueryParameters?.[fe]||this.config.authOptions.clientId);const o=[...e.scopes||[],...e.extraScopesToConsent||[]];if(n.addScopes(o,!0,this.oidcDefaultScopes),n.addRedirectUri(e.redirectUri),n.addCorrelationId(t),n.addResponseMode(e.responseMode),n.addResponseTypeCode(),n.addLibraryInfo(this.config.libraryInfo),Lt(this.config)||n.addApplicationTelemetry(this.config.telemetry.application),n.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&n.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&n.addPrompt(e.prompt),e.domainHint&&n.addDomainHint(e.domainHint),e.prompt!==L.SELECT_ACCOUNT)if(e.sid&&e.prompt===L.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),n.addSid(e.sid);else if(e.account){const r=this.extractAccountSid(e.account);let a=this.extractLoginHint(e.account);if(a&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),a=null),a){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),n.addLoginHint(a);try{const s=ke(e.account.homeAccountId);n.addCcsOid(s)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(r&&e.prompt===L.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),n.addSid(r);try{const s=ke(e.account.homeAccountId);n.addCcsOid(s)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),n.addLoginHint(e.loginHint),n.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),n.addLoginHint(e.account.username);try{const s=ke(e.account.homeAccountId);n.addCcsOid(s)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),n.addLoginHint(e.loginHint),n.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&n.addNonce(e.nonce),e.state&&n.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.embeddedClientId&&n.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),this.addExtraQueryParams(e,n),e.nativeBroker&&(n.addNativeBroker(),e.authenticationScheme===k.POP)){const r=new Me(this.cryptoUtils);let a;e.popKid?a=this.cryptoUtils.encodeKid(e.popKid):a=(await m(r.generateCnf.bind(r),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,n.addPopToken(a)}return n.createQueryString()}createLogoutUrlQueryString(e){const t=new Fe(e.correlationId,this.performanceClient);return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}/*! @azure/msal-common v14.16.0 2024-11-05 */const Ga=300;class Kt extends gn{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireToken,e.correlationId);const t=ne(),n=await m(this.executeTokenRequest.bind(this),h.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),o=n.headers?.[F.X_MS_REQUEST_ID],r=new Ce(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return r.validateTokenResponse(n.body),m(r.handleServerTokenResponse.bind(r),h.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,o)}async acquireTokenByRefreshToken(e){if(!e)throw R(xo);if(this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw g(Jt);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await m(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(n){const o=n instanceof j&&n.errorCode===ct,r=n instanceof ge&&n.errorCode===Ln.INVALID_GRANT_ERROR&&n.subError===Ln.CLIENT_MISMATCH_ERROR;if(o||r)return m(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw n}return m(this.acquireTokenWithCachedRefreshToken.bind(this),h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const n=Ae(this.cacheManager.getRefreshToken.bind(this.cacheManager),h.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!n)throw Dt(ct);if(n.expiresOn&&Ut(n.expiresOn,e.refreshTokenExpirationOffsetSeconds||Ga))throw Dt(mn);const o={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||k.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:$.HOME_ACCOUNT_ID}};try{return await m(this.acquireToken.bind(this),h.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(o)}catch(r){if(r instanceof j&&r.subError===Ct){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const a=_e(n);this.cacheManager.removeRefreshToken(a)}throw r}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientExecuteTokenRequest,e.correlationId);const n=this.createTokenQueryParameters(e),o=S.appendQueryString(t.tokenEndpoint,n),r=await m(this.createTokenRequestBody.bind(this),h.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),a=this.createTokenRequestHeaders(e.ccsCredential),s={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return m(this.executePostToTokenEndpoint.bind(this),h.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(o,r,a,s,e.correlationId,h.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(h.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,n=new Fe(t,this.performanceClient);if(n.addClientId(e.embeddedClientId||e.tokenBodyParameters?.[fe]||this.config.authOptions.clientId),e.redirectUri&&n.addRedirectUri(e.redirectUri),n.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),n.addGrantType(uo.REFRESH_TOKEN_GRANT),n.addClientInfo(),n.addLibraryInfo(this.config.libraryInfo),n.addApplicationTelemetry(this.config.telemetry.application),n.addThrottling(),this.serverTelemetryManager&&!Lt(this.config)&&n.addServerTelemetry(this.serverTelemetryManager),n.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&n.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const o=this.config.clientCredentials.clientAssertion;n.addClientAssertion(await rr(o.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),n.addClientAssertionType(o.assertionType)}if(e.authenticationScheme===k.POP){const o=new Me(this.cryptoUtils,this.performanceClient);let r;e.popKid?r=this.cryptoUtils.encodeKid(e.popKid):r=(await m(o.generateCnf.bind(o),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,n.addPopToken(r)}else if(e.authenticationScheme===k.SSH)if(e.sshJwk)n.addSshJwk(e.sshJwk);else throw R(mt);if((!Y.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case $.HOME_ACCOUNT_ID:try{const o=ke(e.ccsCredential.credential);n.addCcsOid(o)}catch(o){this.logger.verbose("Could not parse home account ID for CCS Header: "+o)}break;case $.UPN:n.addCcsUpn(e.ccsCredential.credential);break}return e.embeddedClientId&&n.addBrokerParameters({brokerClientId:this.config.authOptions.clientId,brokerRedirectUri:this.config.authOptions.redirectUri}),e.tokenBodyParameters&&n.addExtraQueryParameters(e.tokenBodyParameters),n.createQueryString()}}/*! @azure/msal-common v14.16.0 2024-11-05 */class qa extends gn{constructor(e,t){super(e,t)}async acquireToken(e){try{const[t,n]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...Le]});return n===he.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new Kt(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),t}catch(t){if(t instanceof dt&&t.errorCode===ie)return new Kt(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(h.SilentFlowClientAcquireCachedToken,e.correlationId);let t=he.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!Y.isEmptyObj(e.claims))throw this.setCacheOutcome(he.FORCE_REFRESH_OR_CLAIMS,e.correlationId),g(ie);if(!e.account)throw g(Jt);const n=e.account.tenantId||Pa(e.authority),o=this.cacheManager.getTokenKeys(),r=this.cacheManager.getAccessToken(e.account,e,o,n,this.performanceClient,e.correlationId);if(r){if(yi(r.cachedAt)||Ut(r.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(he.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),g(ie);r.refreshOn&&Ut(r.refreshOn,0)&&(t=he.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(he.NO_CACHED_ACCESS_TOKEN,e.correlationId),g(ie);const a=e.authority||this.authority.getPreferredCache(),s={account:this.cacheManager.readAccountFromCache(e.account),accessToken:r,idToken:this.cacheManager.getIdToken(e.account,o,n,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(a)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await m(this.generateResultFromCacheRecord.bind(this),h.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(s,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==he.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){this.performanceClient?.addQueueMeasurement(h.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId);let n;if(e.idToken&&(n=Ie(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||t.maxAge===0){const o=n?.auth_time;if(!o)throw g(jt);Po(o,t.maxAge)}return Ce.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const za={sendGetRequestAsync:()=>Promise.reject(g(E)),sendPostRequestAsync:()=>Promise.reject(g(E))};/*! @azure/msal-common v14.16.0 2024-11-05 */const Zn=",",ar="|";function $a(i){const{skus:e,libraryName:t,libraryVersion:n,extensionName:o,extensionVersion:r}=i,a=new Map([[0,[t,n]],[2,[o,r]]]);let s=[];if(e?.length){if(s=e.split(Zn),s.length<4)return e}else s=Array.from({length:4},()=>ar);return a.forEach((c,l)=>{c.length===2&&c[0]?.length&&c[1]?.length&&Va({skuArr:s,index:l,skuName:c[0],skuVersion:c[1]})}),s.join(Zn)}function Va(i){const{skuArr:e,index:t,skuName:n,skuVersion:o}=i;t>=e.length||(e[t]=[n,o].join(ar))}class Be{constructor(e,t){this.cacheOutcome=he.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||d.EMPTY_STRING,this.wrapperVer=e.wrapperVer||d.EMPTY_STRING,this.telemetryCacheKey=H.CACHE_KEY+x.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${H.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],n=this.getNativeBrokerErrorCode();n?.length&&t.push(`broker_error=${n}`);const o=t.join(H.VALUE_SEPARATOR),r=this.getRegionDiscoveryFields(),a=[e,r].join(H.VALUE_SEPARATOR);return[H.SCHEMA_VERSION,a,o].join(H.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=Be.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(H.VALUE_SEPARATOR),o=e.errors.slice(0,t).join(H.VALUE_SEPARATOR),r=e.errors.length,a=t<r?H.OVERFLOW_TRUE:H.OVERFLOW_FALSE,s=[r,a].join(H.VALUE_SEPARATOR);return[H.SCHEMA_VERSION,e.cacheHits,n,o,s].join(H.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=H.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof N?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(H.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){const e={failedRequests:[],errors:[],cacheHits:0};return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=Be.maxErrorsToSend(e),n=e.errors.length;if(t===n)this.cacheManager.removeItem(this.telemetryCacheKey);else{const o={failedRequests:e.failedRequests.slice(t*2),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,o)}}static maxErrorsToSend(e){let t,n=0,o=0;const r=e.errors.length;for(t=0;t<r;t++){const a=e.failedRequests[2*t]||d.EMPTY_STRING,s=e.failedRequests[2*t+1]||d.EMPTY_STRING,c=e.errors[t]||d.EMPTY_STRING;if(o+=a.toString().length+s.toString().length+c.length+3,o<H.MAX_LAST_HEADER_BYTES)n+=1;else break}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||d.EMPTY_STRING),e.push(this.regionSource||d.EMPTY_STRING),e.push(this.regionOutcome||d.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return $a(e)}}/*! @azure/msal-common v14.16.0 2024-11-05 */const sr="missing_kid_error",cr="missing_alg_error";/*! @azure/msal-common v14.16.0 2024-11-05 */const Qa={[sr]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[cr]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class fn extends N{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,fn.prototype)}}function eo(i){return new fn(i,Qa[i])}/*! @azure/msal-common v14.16.0 2024-11-05 */class Cn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw eo(sr);if(!e.alg)throw eo(cr);const t=new Cn({typ:e.typ||ni.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}/*! @azure/msal-common v14.16.0 2024-11-05 */class to{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class Ya{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:Na.InProgress,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new to}}startPerformanceMeasurement(){return new to}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const yn="pkce_not_created",xt="crypto_nonexistent",yt="empty_navigate_uri",lr="hash_empty_error",Tn="no_state_in_hash",hr="hash_does_not_contain_known_properties",dr="unable_to_parse_state",ur="state_interaction_type_mismatch",gr="interaction_in_progress",mr="popup_window_error",pr="empty_window_error",ye="user_cancelled",Wa="monitor_popup_timeout",fr="monitor_window_timeout",Cr="redirect_in_iframe",yr="block_iframe_reload",Tr="block_nested_popups",ja="iframe_closed_prematurely",Tt="silent_logout_unsupported",Ir="no_account_error",Ja="silent_prompt_value_error",Ar="no_token_request_cache_error",Er="unable_to_parse_token_request_cache_error",In="no_cached_authority_error",Xa="auth_request_not_set_error",Za="invalid_cache_type",It="non_browser_environment",ve="database_not_open",lt="no_network_connectivity",Sr="post_request_failed",vr="get_request_failed",Ft="failed_to_parse_response",wr="unable_to_load_token",An="crypto_key_not_found",_r="auth_code_required",kr="auth_code_or_nativeAccountId_required",Rr="spa_code_and_nativeAccountId_present",En="database_unavailable",br="unable_to_acquire_token_from_native_platform",Or="native_handshake_timeout",Nr="native_extension_not_installed",qe="native_connection_not_established",Pr="uninitialized_public_client_application",Mr="native_prompt_not_supported",Ur="invalid_base64_string",Lr="invalid_pop_token_request",Hr="failed_to_build_headers",Dr="failed_to_parse_headers";/*! @azure/msal-browser v3.28.1 2025-01-14 */const oe="For more visit: aka.ms/msaljs/browser-errors",es={[yn]:"The PKCE code challenge and verifier could not be generated.",[xt]:"The crypto object or function is not available.",[yt]:"Navigation URI is empty. Please check stack trace for more info.",[lr]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${oe}`,[Tn]:"Hash does not contain state. Please verify that the request originated from msal.",[hr]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${oe}`,[dr]:"Unable to parse state. Please verify that the request originated from msal.",[ur]:"Hash contains state but the interaction type does not match the caller.",[gr]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${oe}`,[mr]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[pr]:"window.open returned null or undefined window object.",[ye]:"User cancelled the flow.",[Wa]:`Token acquisition in popup failed due to timeout.  ${oe}`,[fr]:`Token acquisition in iframe failed due to timeout.  ${oe}`,[Cr]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[yr]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${oe}`,[Tr]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[ja]:"The iframe being monitored was closed prematurely.",[Tt]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[Ir]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Ja]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[Ar]:"No token request found in cache.",[Er]:"The cached token request could not be parsed.",[In]:"No cached authority found.",[Xa]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Za]:"Invalid cache type",[It]:"Login and token requests are not supported in non-browser environments.",[ve]:"Database is not open!",[lt]:"No network connectivity. Check your internet connection.",[Sr]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[vr]:"Network request failed. Please check the network trace to determine root cause.",[Ft]:"Failed to parse network response. Check network trace.",[wr]:"Error loading token to cache.",[An]:"Cryptographic Key or Keypair not found in browser storage.",[_r]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[kr]:"An authorization code or nativeAccountId must be provided to this flow.",[Rr]:"Request cannot contain both spa code and native account id.",[En]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[br]:`Unable to acquire token from native platform.  ${oe}`,[Or]:"Timed out while attempting to establish connection to browser extension",[Nr]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[qe]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${oe}`,[Pr]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${oe}`,[Mr]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[Ur]:"Invalid base64 encoded string.",[Lr]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",[Hr]:"Failed to build request headers object.",[Dr]:"Failed to parse response headers"};class ze extends N{constructor(e,t){super(e,es[e],t),Object.setPrototypeOf(this,ze.prototype),this.name="BrowserAuthError"}}function C(i,e){return new ze(i,e)}/*! @azure/msal-browser v3.28.1 2025-01-14 */const z={INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},Re={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},pe={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},B={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},no={GET:"GET",POST:"POST"},w={AUTHORITY:"authority",ACQUIRE_TOKEN_ACCOUNT:"acquireToken.account",SESSION_STATE:"session.state",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",RENEW_STATUS:"token.renew.status",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",SCOPES:"scopes",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native",REDIRECT_CONTEXT:"request.redirect.context"},le={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},Xe={WRAPPER_SKU:"wrapper.sku",WRAPPER_VER:"wrapper.version"},b={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var y;(function(i){i.Redirect="redirect",i.Popup="popup",i.Silent="silent",i.None="none"})(y||(y={}));const oo={scopes:Le},Kr="jwk",Bt="msal.db",ts=1,ns=`${Bt}.keys`,q={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},os=[q.Default,q.Skip,q.RefreshTokenAndNetwork],rs="msal.browser.log.level",is="msal.browser.log.pii";/*! @azure/msal-browser v3.28.1 2025-01-14 */function Ze(i){return encodeURIComponent(Sn(i).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function At(i){return xr(i).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function Sn(i){return xr(new TextEncoder().encode(i))}function xr(i){const e=Array.from(i,t=>String.fromCodePoint(t)).join("");return btoa(e)}/*! @azure/msal-browser v3.28.1 2025-01-14 */const as="RSASSA-PKCS1-v1_5",Fr="SHA-256",ss=2048,cs=new Uint8Array([1,0,1]),ro="0123456789abcdef",io=new Uint32Array(1),ls="crypto_subtle_undefined",vn={name:as,hash:Fr,modulusLength:ss,publicExponent:cs};function hs(i){if(!window)throw C(It);if(!window.crypto)throw C(xt);if(!i&&!window.crypto.subtle)throw C(xt,ls)}async function Br(i,e,t){e?.addQueueMeasurement(h.Sha256Digest,t);const o=new TextEncoder().encode(i);return window.crypto.subtle.digest(Fr,o)}function ds(i){return window.crypto.getRandomValues(i)}function Rt(){return window.crypto.getRandomValues(io),io[0]}function ce(){const i=Date.now(),e=Rt()*1024+(Rt()&1023),t=new Uint8Array(16),n=Math.trunc(e/2**30),o=e&2**30-1,r=Rt();t[0]=i/2**40,t[1]=i/2**32,t[2]=i/2**24,t[3]=i/2**16,t[4]=i/2**8,t[5]=i,t[6]=112|n>>>8,t[7]=n,t[8]=128|o>>>24,t[9]=o>>>16,t[10]=o>>>8,t[11]=o,t[12]=r>>>24,t[13]=r>>>16,t[14]=r>>>8,t[15]=r;let a="";for(let s=0;s<t.length;s++)a+=ro.charAt(t[s]>>>4),a+=ro.charAt(t[s]&15),(s===3||s===5||s===7||s===9)&&(a+="-");return a}async function us(i,e){return window.crypto.subtle.generateKey(vn,i,e)}async function bt(i){return window.crypto.subtle.exportKey(Kr,i)}async function gs(i,e,t){return window.crypto.subtle.importKey(Kr,i,vn,e,t)}async function ms(i,e){return window.crypto.subtle.sign(vn,i,e)}async function Gr(i){const e=await Br(i),t=new Uint8Array(e);return At(t)}/*! @azure/msal-browser v3.28.1 2025-01-14 */const wn="storage_not_supported",ps="stubbed_public_client_application_called",qr="in_mem_redirect_unavailable";/*! @azure/msal-browser v3.28.1 2025-01-14 */const fs={[wn]:"Given storage configuration option was not supported.",[ps]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[qr]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class _n extends N{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,_n.prototype)}}function kn(i){return new _n(i,fs[i])}/*! @azure/msal-browser v3.28.1 2025-01-14 */function Cs(i){i.location.hash="",typeof i.history.replaceState=="function"&&i.history.replaceState(null,"",`${i.location.origin}${i.location.pathname}${i.location.search}`)}function ys(i){const e=i.split("#");e.shift(),window.location.hash=e.length>0?e.join("#"):""}function Rn(){return window.parent!==window}function Ts(){return typeof window<"u"&&!!window.opener&&window.opener!==window&&typeof window.name=="string"&&window.name.indexOf(`${z.POPUP_NAME_PREFIX}.`)===0}function ae(){return typeof window<"u"&&window.location?window.location.href.split("?")[0].split("#")[0]:""}function Is(){const e=new S(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function As(){if(S.hashContainsKnownProperties(window.location.hash)&&Rn())throw C(yr)}function Es(i){if(Rn()&&!i)throw C(Cr)}function Ss(){if(Ts())throw C(Tr)}function zr(){if(typeof window>"u")throw C(It)}function $r(i){if(!i)throw C(Pr)}function bn(i){zr(),As(),Ss(),$r(i)}function ao(i,e){if(bn(i),Es(e.system.allowRedirectInIframe),e.cache.cacheLocation===B.MemoryStorage&&!e.cache.storeAuthStateInCookie)throw kn(qr)}function Vr(i){const e=document.createElement("link");e.rel="preconnect",e.href=new URL(i).origin,e.crossOrigin="anonymous",document.head.appendChild(e),window.setTimeout(()=>{try{document.head.removeChild(e)}catch{}},1e4)}function vs(){return ce()}/*! @azure/msal-browser v3.28.1 2025-01-14 */class ht{navigateInternal(e,t){return ht.defaultNavigateWindow(e,t)}navigateExternal(e,t){return ht.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(n=>{setTimeout(()=>{n(!0)},t.timeout)})}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class ws{async sendGetRequestAsync(e,t){let n,o={},r=0;const a=so(t);try{n=await fetch(e,{method:no.GET,headers:a})}catch{throw C(window.navigator.onLine?vr:lt)}o=co(n.headers);try{return r=n.status,{headers:o,body:await n.json(),status:r}}catch{throw jn(C(Ft),r,o)}}async sendPostRequestAsync(e,t){const n=t&&t.body||"",o=so(t);let r,a=0,s={};try{r=await fetch(e,{method:no.POST,headers:o,body:n})}catch{throw C(window.navigator.onLine?Sr:lt)}s=co(r.headers);try{return a=r.status,{headers:s,body:await r.json(),status:a}}catch{throw jn(C(Ft),a,s)}}}function so(i){try{const e=new Headers;if(!(i&&i.headers))return e;const t=i.headers;return Object.entries(t).forEach(([n,o])=>{e.append(n,o)}),e}catch{throw C(Hr)}}function co(i){try{const e={};return i.forEach((t,n)=>{e[n]=t}),e}catch{throw C(Dr)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const _s=6e4,Gt=1e4,ks=3e4,Rs=2e3;function bs({auth:i,cache:e,system:t,telemetry:n},o){const r={clientId:d.EMPTY_STRING,authority:`${d.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:d.EMPTY_STRING,authorityMetadata:d.EMPTY_STRING,redirectUri:typeof window<"u"?ae():"",postLogoutRedirectUri:d.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:se.AAD,OIDCOptions:{serverResponseType:Ge.FRAGMENT,defaultScopes:[d.OPENID_SCOPE,d.PROFILE_SCOPE,d.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:tn.None,tenant:d.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},a={cacheLocation:B.SessionStorage,temporaryCacheLocation:B.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!(e&&e.cacheLocation===B.LocalStorage),claimsBasedCachingEnabled:!1},s={loggerCallback:()=>{},logLevel:O.Info,piiLoggingEnabled:!1},l={...{...Zo,loggerOptions:s,networkClient:o?new ws:za,navigationClient:new ht,loadFrameTimeout:0,windowHashTimeout:t?.loadFrameTimeout||_s,iframeHashTimeout:t?.loadFrameTimeout||Gt,navigateFrameWait:0,redirectNavigationTimeout:ks,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:t?.nativeBrokerHandshakeTimeout||Rs,pollIntervalMilliseconds:z.DEFAULT_POLL_INTERVAL_MS},...t,loggerOptions:t?.loggerOptions||s},u={application:{appName:d.EMPTY_STRING,appVersion:d.EMPTY_STRING},client:new Ya};if(i?.protocolMode!==se.OIDC&&i?.OIDCOptions&&new ue(l.loggerOptions).warning(JSON.stringify(R($o))),i?.protocolMode&&i.protocolMode!==se.AAD&&l?.allowNativeBroker)throw R(Vo);return{auth:{...r,...i,OIDCOptions:{...r.OIDCOptions,...i?.OIDCOptions}},cache:{...a,...e},system:l,telemetry:{...u,...n}}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Os="@azure/msal-browser",Et="3.28.1";/*! @azure/msal-browser v3.28.1 2025-01-14 */class On{static loggerCallback(e,t){switch(e){case O.Error:console.error(t);return;case O.Info:console.info(t);return;case O.Verbose:console.debug(t);return;case O.Warning:console.warn(t);return;default:console.log(t);return}}constructor(e){this.browserEnvironment=typeof window<"u",this.config=bs(e,this.browserEnvironment);let t;try{t=window[B.SessionStorage]}catch{}const n=t?.getItem(rs),o=t?.getItem(is)?.toLowerCase(),r=o==="true"?!0:o==="false"?!1:void 0,a={...this.config.system.loggerOptions},s=n&&Object.keys(O).includes(n)?O[n]:void 0;s&&(a.loggerCallback=On.loggerCallback,a.logLevel=s),r!==void 0&&(a.piiLoggingEnabled=r),this.logger=new ue(a,Os,Et),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Te extends On{getModuleName(){return Te.MODULE_NAME}getId(){return Te.ID}async initialize(){return this.available=typeof window<"u",this.available}}Te.MODULE_NAME="";Te.ID="StandardOperatingContext";/*! @azure/msal-browser v3.28.1 2025-01-14 */function te(i){return new TextDecoder().decode(Ns(i))}function Ns(i){let e=i.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw C(Ur)}const t=atob(e);return Uint8Array.from(t,n=>n.codePointAt(0)||0)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ps{constructor(){this.dbName=Bt,this.version=ts,this.tableName=ns,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const n=window.indexedDB.open(this.dbName,this.version);n.addEventListener("upgradeneeded",o=>{o.target.result.createObjectStore(this.tableName)}),n.addEventListener("success",o=>{const r=o;this.db=r.target.result,this.dbOpen=!0,e()}),n.addEventListener("error",()=>t(C(En)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(ve));const a=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);a.addEventListener("success",s=>{const c=s;this.closeConnection(),t(c.target.result)}),a.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((n,o)=>{if(!this.db)return o(C(ve));const s=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);s.addEventListener("success",()=>{this.closeConnection(),n()}),s.addEventListener("error",c=>{this.closeConnection(),o(c)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(ve));const a=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);a.addEventListener("success",()=>{this.closeConnection(),t()}),a.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(C(ve));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",a=>{const s=a;this.closeConnection(),e(s.target.result)}),r.addEventListener("error",a=>{this.closeConnection(),t(a)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(C(ve));const a=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);a.addEventListener("success",s=>{const c=s;this.closeConnection(),t(c.target.result===1)}),a.addEventListener("error",s=>{this.closeConnection(),n(s)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const n=window.indexedDB.deleteDatabase(Bt),o=setTimeout(()=>t(!1),200);n.addEventListener("success",()=>(clearTimeout(o),e(!0))),n.addEventListener("blocked",()=>(clearTimeout(o),e(!0))),n.addEventListener("error",()=>(clearTimeout(o),t(!1)))})}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class qt{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,n)=>{e.push(n)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ms{constructor(e){this.inMemoryCache=new qt,this.indexedDBCache=new Ps,this.logger=e}handleDatabaseAccessError(e){if(e instanceof ze&&e.errorCode===En)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(n){this.handleDatabaseAccessError(n)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(n){this.handleDatabaseAccessError(n)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(t){this.handleDatabaseAccessError(t)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(e.length===0)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(t){this.handleDatabaseAccessError(t)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(n){this.handleDatabaseAccessError(n)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ue{constructor(e,t,n){this.logger=e,hs(n??!1),this.cache=new Ms(this.logger),this.performanceClient=t}createNewGuid(){return ce()}base64Encode(e){return Sn(e)}base64Decode(e){return te(e)}base64UrlEncode(e){return Ze(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){const t=this.performanceClient?.startMeasurement(h.CryptoOptsGetPublicKeyThumbprint,e.correlationId),n=await us(Ue.EXTRACTABLE,Ue.POP_KEY_USAGES),o=await bt(n.publicKey),r={e:o.e,kty:o.kty,n:o.n},a=lo(r),s=await this.hashString(a),c=await bt(n.privateKey),l=await gs(c,!1,["sign"]);return await this.cache.setItem(s,{privateKey:l,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),s}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,n,o){const r=this.performanceClient?.startMeasurement(h.CryptoOptsSignJwt,o),a=await this.cache.getItem(t);if(!a)throw C(An);const s=await bt(a.publicKey),c=lo(s),l=Ze(JSON.stringify({kid:t})),u=Cn.getShrHeaderString({...n?.header,alg:s.alg,kid:l}),p=Ze(u);e.cnf={jwk:JSON.parse(c)};const f=Ze(JSON.stringify(e)),A=`${p}.${f}`,v=new TextEncoder().encode(A),D=await ms(a.privateKey,v),V=At(new Uint8Array(D)),me=`${A}.${V}`;return r&&r.end({success:!0}),me}async hashString(e){return Gr(e)}}Ue.POP_KEY_USAGES=["sign","verify"];Ue.EXTRACTABLE=!0;function lo(i){return JSON.stringify(i,Object.keys(i).sort())}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Us{constructor(){if(!window.localStorage)throw kn(wn)}getItem(e){return window.localStorage.getItem(e)}setItem(e,t){window.localStorage.setItem(e,t)}removeItem(e){window.localStorage.removeItem(e)}getKeys(){return Object.keys(window.localStorage)}containsKey(e){return window.localStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ls{constructor(){if(!window.sessionStorage)throw kn(wn)}getItem(e){return window.sessionStorage.getItem(e)}setItem(e,t){window.sessionStorage.setItem(e,t)}removeItem(e){window.sessionStorage.removeItem(e)}getKeys(){return Object.keys(window.sessionStorage)}containsKey(e){return window.sessionStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */function Qr(i,e){if(!e)return null;try{return W.parseRequestState(i,e).libraryState.meta}catch{throw g(Ne)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Hs=24*60*60*1e3;class Ds{getItem(e){const t=`${encodeURIComponent(e)}`,n=document.cookie.split(";");for(let o=0;o<n.length;o++){const r=n[o],[a,...s]=decodeURIComponent(r).trim().split("="),c=s.join("=");if(a===t)return c}return""}setItem(e,t,n,o=!0){let r=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(n){const a=Ks(n);r+=`expires=${a};`}o&&(r+="Secure;"),document.cookie=r}removeItem(e){this.setItem(e,"",-1)}getKeys(){const e=document.cookie.split(";"),t=[];return e.forEach(n=>{const o=decodeURIComponent(n).trim().split("=");t.push(o[0])}),t}containsKey(e){return this.getKeys().includes(e)}}function Ks(i){const e=new Date;return new Date(e.getTime()+i*Hs).toUTCString()}/*! @azure/msal-browser v3.28.1 2025-01-14 */class zt extends Pe{constructor(e,t,n,o,r,a){super(e,n,o,r),this.cacheConfig=t,this.logger=o,this.internalStorage=new qt,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupBrowserStorage(this.cacheConfig.temporaryCacheLocation),this.cookieStorage=new Ds,t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=a}setupBrowserStorage(e){try{switch(e){case B.LocalStorage:return new Us;case B.SessionStorage:return new Ls;case B.MemoryStorage:default:break}}catch(t){this.logger.error(t)}return this.cacheConfig.cacheLocation=B.MemoryStorage,new qt}migrateCacheEntries(){const e=`${d.CACHE_PREFIX}.${U.ID_TOKEN}`,t=`${d.CACHE_PREFIX}.${U.CLIENT_INFO}`,n=`${d.CACHE_PREFIX}.${U.ERROR}`,o=`${d.CACHE_PREFIX}.${U.ERROR_DESC}`,r=this.browserStorage.getItem(e),a=this.browserStorage.getItem(t),s=this.browserStorage.getItem(n),c=this.browserStorage.getItem(o),l=[r,a,s,c];[U.ID_TOKEN,U.CLIENT_INFO,U.ERROR,U.ERROR_DESC].forEach((p,f)=>{const A=l[f];A&&this.setTemporaryCache(p,A,!0)})}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(le.ACCOUNT_KEYS),t=this.getItem(`${le.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(o=>{if(this.isCredentialKey(o)){const r=this.getItem(o);if(r){const a=this.validateAndParseJson(r);if(a&&a.hasOwnProperty("credentialType"))switch(a.credentialType){case I.ID_TOKEN:if(Fn(a)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${o} found, saving key to token key map`);const s=a,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,I.ID_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${o}`);break;case I.ACCESS_TOKEN:case I.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(xn(a)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${o} found, saving key to token key map`);const s=a,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,I.ACCESS_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${o}`);break;case I.REFRESH_TOKEN:if(Bn(a)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${o} found, saving key to token key map`);const s=a,c=this.updateCredentialCacheKey(o,s);this.addTokenKey(c,I.REFRESH_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${o}`);break}}}if(this.isAccountKey(o)){const r=this.getItem(o);if(r){const a=this.validateAndParseJson(r);a&&M.isAccountEntity(a)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${o} found, saving key to account key map`),this.addAccountKeyToMap(o))}}})}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&typeof t=="object"?t:null}catch{return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");const n=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,n,t)}getCachedAccountEntity(e){const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const n=this.validateAndParseJson(t);return!n||!M.isAccountEntity(n)?(this.removeAccountKeyFromMap(e),null):Pe.toObject(new M,n)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(le.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();t.indexOf(e)===-1?(t.push(e),this.setItem(le.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),n=t.indexOf(e);n>-1?(t.splice(n,1),this.setItem(le.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,I.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,I.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,I.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${le.TOKEN_KEYS}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const n=this.getTokenKeys();switch(t){case I.ID_TOKEN:n.idToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),n.idToken.push(e));break;case I.ACCESS_TOKEN:n.accessToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),n.accessToken.push(e));break;case I.REFRESH_TOKEN:n.refreshToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),n.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(Mt)}this.setItem(`${le.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const n=this.getTokenKeys();switch(t){case I.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const o=n.idToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),n.idToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case I.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const r=n.accessToken.indexOf(e);r>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),n.accessToken.splice(r,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case I.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const a=n.refreshToken.indexOf(e);a>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),n.refreshToken.splice(a,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(Mt)}this.setItem(`${le.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ID_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Fn(n)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ID_TOKEN),null):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=_e(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ACCESS_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!xn(n)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.ACCESS_TOKEN),null):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=_e(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.REFRESH_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Bn(n)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,I.REFRESH_TOKEN),null):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=_e(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,I.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!ki(e,n)?(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),n)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=_i(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!vi(e,n)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),n)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&Ri(e,n)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),n):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(t=>this.isAuthorityMetadata(t))}setWrapperMetadata(e,t){this.internalStorage.setItem(Xe.WRAPPER_SKU,e),this.internalStorage.setItem(Xe.WRAPPER_VER,t)}getWrapperMetadata(){const e=this.internalStorage.getItem(Xe.WRAPPER_SKU)||d.EMPTY_STRING,t=this.internalStorage.getItem(Xe.WRAPPER_VER)||d.EMPTY_STRING;return[e,t]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(U.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const o=this.generateCacheKey(U.ACTIVE_ACCOUNT),r=this.getItem(o);if(!r)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const a=this.getAccountInfoFilteredBy({localAccountId:r});return a?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(a),a):null}const n=this.validateAndParseJson(t);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId,tenantId:n.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(U.ACTIVE_ACCOUNT_FILTERS),n=this.generateCacheKey(U.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");const o={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(o)),this.browserStorage.setItem(n,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(n)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!wi(e,n)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),n)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const n=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const r=this.cookieStorage.getItem(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),r}const o=this.temporaryCacheStorage.getItem(n);if(!o){if(this.cacheConfig.cacheLocation===B.LocalStorage){const r=this.browserStorage.getItem(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),r}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),o}setTemporaryCache(e,t,n){const o=n?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(o,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.cookieStorage.setItem(o,t,void 0,this.cacheConfig.secureCookies))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.cookieStorage.removeItem(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach(e=>{(e.indexOf(d.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{(e.indexOf(d.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.browserStorage.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(h.ClearTokensAndKeysWithClaims,t);const n=this.getTokenKeys(),o=[];n.accessToken.forEach(r=>{const a=this.getAccessTokenCredential(r);a?.requestedClaimsHash&&r.includes(a.requestedClaimsHash.toLowerCase())&&o.push(this.removeAccessToken(r))}),await Promise.all(o),o.length>0&&this.logger.warning(`${o.length} access tokens with claims in the cache keys have been removed from the cache.`)}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):Y.startsWith(e,d.CACHE_PREFIX)||Y.startsWith(e,U.ADAL_ID_TOKEN)?e:`${d.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=W.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${w.AUTHORITY}.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=W.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${w.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=W.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${w.REQUEST_STATE}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),n=this.getTemporaryCache(t);if(!n)return null;const o=this.generateAuthorityKey(n);return this.getTemporaryCache(o)}updateCacheEntries(e,t,n,o,r){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const a=this.generateStateKey(e);this.setTemporaryCache(a,e,!1);const s=this.generateNonceKey(e);this.setTemporaryCache(s,t,!1);const c=this.generateAuthorityKey(e);if(this.setTemporaryCache(c,n,!1),r){const l={credential:r.homeAccountId,type:$.HOME_ACCOUNT_ID};this.setTemporaryCache(w.CCS_CREDENTIAL,JSON.stringify(l),!0)}else if(o){const l={credential:o,type:$.UPN};this.setTemporaryCache(w.CCS_CREDENTIAL,JSON.stringify(l),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach(t=>{t.indexOf(e)!==-1&&this.removeTemporaryItem(t)}),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(w.REQUEST_PARAMS)),this.removeTemporaryItem(this.generateCacheKey(w.ORIGIN_URI)),this.removeTemporaryItem(this.generateCacheKey(w.URL_HASH)),this.removeTemporaryItem(this.generateCacheKey(w.CORRELATION_ID)),this.removeTemporaryItem(this.generateCacheKey(w.CCS_CREDENTIAL)),this.removeTemporaryItem(this.generateCacheKey(w.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const t=this.generateStateKey(e),n=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||d.EMPTY_STRING)}}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach(t=>{if(t.indexOf(w.REQUEST_STATE)===-1)return;const n=this.temporaryCacheStorage.getItem(t);if(!n)return;const o=Qr(this.cryptoImpl,n);o&&o.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n))}),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=Sn(JSON.stringify(e));this.setTemporaryCache(w.REQUEST_PARAMS,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(w.REQUEST_PARAMS,!0);if(!t)throw C(Ar);let n;try{n=JSON.parse(te(t))}catch(o){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${o}`),C(Er)}if(this.removeTemporaryItem(this.generateCacheKey(w.REQUEST_PARAMS)),!n.authority){const o=this.generateAuthorityKey(e),r=this.getTemporaryCache(o);if(!r)throw C(In);n.authority=r}return n}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(w.NATIVE_REQUEST,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${d.CACHE_PREFIX}.${w.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const t=`${d.CACHE_PREFIX}.${w.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw C(gr);this.setTemporaryCache(t,this.clientId,!1)}else!e&&this.getInteractionInProgress()===this.clientId&&this.removeTemporaryItem(t)}getLegacyLoginHint(){const e=this.getTemporaryCache(U.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(U.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(U.ID_TOKEN,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(U.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const n=t||e;if(n){const o=Ie(n,te);if(o.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),o.preferred_username;if(o.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),o.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const n=_e(t);if(e!==n){const o=this.getItem(e);if(o)return this.browserStorage.removeItem(e),this.setItem(n,o),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),n;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){const n=ut(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);let o;t.claims&&(o=await this.cryptoImpl.hashString(t.claims));const r=gt(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,te,void 0,e.tokenType,void 0,t.sshKid,t.claims,o),a={idToken:n,accessToken:r};return this.saveCacheRecord(a)}async saveCacheRecord(e,t,n){try{await super.saveCacheRecord(e,t,n)}catch(o){if(o instanceof be&&this.performanceClient&&n)try{const r=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:r.refreshToken.length,cacheIdCount:r.idToken.length,cacheAtCount:r.accessToken.length},n)}catch{}throw o}}}const xs=(i,e)=>{const t={cacheLocation:B.MemoryStorage,temporaryCacheLocation:B.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new zt(i,t,ot,e)};/*! @azure/msal-browser v3.28.1 2025-01-14 */function Fs(i,e,t,n){return i.verbose("getAllAccounts called"),t?e.getAllAccounts(n):[]}function Bs(i,e,t){if(e.trace("getAccount called"),Object.keys(i).length===0)return e.warning("getAccount: No accountFilter provided"),null;const n=t.getAccountInfoFilteredBy(i);return n?(e.verbose("getAccount: Account matching provided filter found, returning"),n):(e.verbose("getAccount: No matching account found, returning null"),null)}function Gs(i,e,t){if(e.trace("getAccountByUsername called"),!i)return e.warning("getAccountByUsername: No username provided"),null;const n=t.getAccountInfoFilteredBy({username:i});return n?(e.verbose("getAccountByUsername: Account matching username found, returning"),e.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${i}`),n):(e.verbose("getAccountByUsername: No matching account found, returning null"),null)}function qs(i,e,t){if(e.trace("getAccountByHomeId called"),!i)return e.warning("getAccountByHomeId: No homeAccountId provided"),null;const n=t.getAccountInfoFilteredBy({homeAccountId:i});return n?(e.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),e.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${i}`),n):(e.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function zs(i,e,t){if(e.trace("getAccountByLocalId called"),!i)return e.warning("getAccountByLocalId: No localAccountId provided"),null;const n=t.getAccountInfoFilteredBy({localAccountId:i});return n?(e.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),e.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${i}`),n):(e.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function $s(i,e){e.setActiveAccount(i)}function Vs(i){return i.getActiveAccount()}/*! @azure/msal-browser v3.28.1 2025-01-14 */const T={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};/*! @azure/msal-browser v3.28.1 2025-01-14 */class Qs{constructor(e){this.eventCallbacks=new Map,this.logger=e||new ue({})}addEventCallback(e,t,n){if(typeof window<"u"){const o=n||vs();return this.eventCallbacks.has(o)?(this.logger.error(`Event callback with id: ${o} is already registered. Please provide a unique id or remove the existing callback and try again.`),null):(this.eventCallbacks.set(o,[e,t||[]]),this.logger.verbose(`Event callback registered with id: ${o}`),o)}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}emitEvent(e,t,n,o){if(typeof window<"u"){const r={eventType:e,interactionType:t||null,payload:n||null,error:o||null,timestamp:Date.now()};this.eventCallbacks.forEach(([a,s],c)=>{(s.length===0||s.includes(e))&&(this.logger.verbose(`Emitting event to callback ${c}: ${e}`),a.apply(null,[r]))})}}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Yr{constructor(e,t,n,o,r,a,s,c,l){this.config=e,this.browserStorage=t,this.browserCrypto=n,this.networkClient=this.config.system.networkClient,this.eventHandler=r,this.navigationClient=a,this.nativeMessageHandler=c,this.correlationId=l||ce(),this.logger=o.clone(z.MSAL_SKU,Et,this.correlationId),this.performanceClient=s}async clearCacheOnLogout(e){if(e){M.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(M.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch{this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch{this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri;return S.getAbsoluteUrl(t,ae())}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const n={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new Be(n,this.browserStorage)}async getDiscoveredAuthority(e){const{account:t}=e,n=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(h.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const o={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},r=e.requestAuthority||this.config.auth.authority,a=n?.length?n==="true":this.config.auth.instanceAware,s=t&&a?this.config.auth.authority.replace(S.getDomainFromUrl(r),t.environment):r,c=K.generateAuthority(s,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),l=await m(nr,h.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(c,this.config.system.networkClient,this.browserStorage,o,this.logger,this.correlationId,this.performanceClient);if(t&&!l.isAlias(t.environment))throw R(Qo);return l}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Ys=32;async function Ws(i,e,t){i.addQueueMeasurement(h.GeneratePkceCodes,t);const n=Ae(js,h.GenerateCodeVerifier,e,i,t)(i,e,t),o=await m(Js,h.GenerateCodeChallengeFromVerifier,e,i,t)(n,i,e,t);return{verifier:n,challenge:o}}function js(i,e,t){try{const n=new Uint8Array(Ys);return Ae(ds,h.GetRandomValues,e,i,t)(n),At(n)}catch{throw C(yn)}}async function Js(i,e,t,n){e.addQueueMeasurement(h.GenerateCodeChallengeFromVerifier,n);try{const o=await m(Br,h.Sha256Digest,t,e,n)(i,e,n);return At(new Uint8Array(o))}catch{throw C(yn)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */async function Nn(i,e,t,n){t.addQueueMeasurement(h.InitializeBaseRequest,i.correlationId);const o=i.authority||e.auth.authority,r=[...i&&i.scopes||[]],a={...i,correlationId:i.correlationId,authority:o,scopes:r};if(!a.authenticationScheme)a.authenticationScheme=k.BEARER,n.verbose(`Authentication Scheme wasn't explicitly set in request, defaulting to "Bearer" request`);else{if(a.authenticationScheme===k.SSH){if(!i.sshJwk)throw R(mt);if(!i.sshKid)throw R(zo)}n.verbose(`Authentication Scheme set to "${a.authenticationScheme}" as configured in Auth request`)}return e.cache.claimsBasedCachingEnabled&&i.claims&&!Y.isEmptyObj(i.claims)&&(a.requestedClaimsHash=await Gr(i.claims)),a}async function Xs(i,e,t,n,o){n.addQueueMeasurement(h.InitializeSilentRequest,i.correlationId);const r=await m(Nn,h.InitializeBaseRequest,o,n,i.correlationId)(i,t,n,o);return{...i,...r,account:e,forceRefresh:i.forceRefresh||!1}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class He extends Yr{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);const t=await m(Ws,h.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...e,redirectUri:e.redirectUri,code:d.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=d.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);const t={correlationId:this.correlationId||ce(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const n=this.getLogoutHintFromIdTokenClaims(e.account);n&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=n)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return!e||e.postLogoutRedirectUri!==null?e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(e.postLogoutRedirectUri,ae())):this.config.auth.postLogoutRedirectUri===null?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,ae())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=S.getAbsoluteUrl(ae(),ae())):this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const t=await m(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e);return new ir(t,this.performanceClient)}async getClientConfiguration(e){const{serverTelemetryManager:t,requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:r,account:a}=e;this.performanceClient.addQueueMeasurement(h.StandardInteractionClientGetClientConfiguration,this.correlationId);const s=await m(this.getDiscoveredAuthority.bind(this),h.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:r,account:a}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:s,clientCapabilities:this.config.auth.clientCapabilities,redirectUri:this.config.auth.redirectUri},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:z.MSAL_SKU,version:Et,cpu:d.EMPTY_STRING,os:d.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(h.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(e.redirectUri),o={interactionType:t},r=W.setRequestState(this.browserCrypto,e&&e.state||d.EMPTY_STRING,o),s={...await m(Nn,h.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:r,nonce:e.nonce||ce(),responseMode:this.config.auth.OIDCOptions.serverResponseType};if(e.loginHint||e.sid)return s;const c=e.account||this.browserStorage.getActiveAccount();if(c&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${c.homeAccountId}`,this.correlationId),s.account=c),!s.loginHint&&!c){const l=this.browserStorage.getLegacyLoginHint();l&&(s.loginHint=l)}return s}}/*! @azure/msal-browser v3.28.1 2025-01-14 */const Zs="ContentError",Wr="user_switch";/*! @azure/msal-browser v3.28.1 2025-01-14 */const ec="USER_INTERACTION_REQUIRED",tc="USER_CANCEL",nc="NO_NETWORK",oc="PERSISTENT_ERROR",rc="DISABLED",ic="ACCOUNT_UNAVAILABLE";/*! @azure/msal-browser v3.28.1 2025-01-14 */const ac=-2147186943,sc={[Wr]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class Z extends N{constructor(e,t,n){super(e,t),Object.setPrototypeOf(this,Z.prototype),this.name="NativeAuthError",this.ext=n}}function we(i){if(i.ext&&i.ext.status&&(i.ext.status===oc||i.ext.status===rc)||i.ext&&i.ext.error&&i.ext.error===ac)return!0;switch(i.errorCode){case Zs:return!0;default:return!1}}function $t(i,e,t){if(t&&t.status)switch(t.status){case ic:return Dt(or);case ec:return new j(i,e);case tc:return C(ye);case nc:return C(lt)}return new Z(i,sc[i]||e,t)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class jr extends He{async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(b.acquireTokenSilent_silentFlow),n=await m(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),o=new qa(n,this.performanceClient);this.logger.verbose("Silent auth client created");try{const a=(await m(o.acquireCachedToken.bind(o),h.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),a}catch(r){throw r instanceof ze&&r.errorCode===An&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),r}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Oe extends Yr{constructor(e,t,n,o,r,a,s,c,l,u,p,f){super(e,t,n,o,r,a,c,l,f),this.apiId=s,this.accountId=u,this.nativeMessageHandler=l,this.nativeStorageManager=p,this.silentCacheClient=new jr(e,this.nativeStorageManager,n,o,r,a,c,l,f),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);const A=this.nativeMessageHandler.getExtensionId()===Re.PREFERRED_EXTENSION_ID?"chrome":this.nativeMessageHandler.getExtensionId()?.length?"unknown":void 0;this.skus=Be.makeExtraSkuString({libraryName:z.MSAL_SKU,libraryVersion:Et,extensionName:A,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,[_a]:this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(h.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(h.NativeInteractionClientAcquireToken,e.correlationId),n=ne();try{const o=await this.initializeNativeRequest(e);try{const l=await this.acquireTokensFromCache(this.accountId,o);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),l}catch{this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const{...r}=o,a={method:pe.GetToken,request:r},s=await this.nativeMessageHandler.sendMessage(a),c=this.validateNativeResponse(s);return await this.handleNativeResponse(c,o,n).then(l=>(t.end({success:!0,isNativeBroker:!0,requestId:l.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),l)).catch(l=>{throw t.end({success:!1,errorCode:l.errorCode,subErrorCode:l.subError,isNativeBroker:!0}),l})}catch(o){throw o instanceof Z&&this.serverTelemetryManager.setNativeBrokerErrorCode(o.errorCode),o}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:P.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),g(Nt);const n=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!n)throw g(Nt);try{const o=this.createSilentCacheRequest(t,n),r=await this.silentCacheClient.acquireToken(o),a={...n,idTokenClaims:r?.idTokenClaims,idToken:r?.idToken};return{...r,account:a}}catch(o){throw o}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const{...n}=e;delete n.onRedirectNavigate;const o=await this.initializeNativeRequest(n),r={method:pe.GetToken,request:o};try{const c=await this.nativeMessageHandler.sendMessage(r);this.validateNativeResponse(c)}catch(c){if(c instanceof Z&&(this.serverTelemetryManager.setNativeBrokerErrorCode(c.errorCode),we(c)))throw c}this.browserStorage.setTemporaryCache(w.NATIVE_REQUEST,JSON.stringify(o),!0);const a={apiId:b.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},s=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(s,a)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const n=this.browserStorage.getCachedNativeRequest();if(!n)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;const{prompt:o,...r}=n;o&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(w.NATIVE_REQUEST));const a={method:pe.GetToken,request:r},s=ne();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const c=await this.nativeMessageHandler.sendMessage(a);this.validateNativeResponse(c);const l=this.handleNativeResponse(c,r,s);this.browserStorage.setInteractionInProgress(!1);const u=await l;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),u}catch(c){throw this.browserStorage.setInteractionInProgress(!1),c}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,n){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");const o=Ie(e.id_token,te),r=this.createHomeAccountIdentifier(e,o),a=this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId})?.homeAccountId;if(r!==a&&e.account.id!==t.accountId)throw $t(Wr);const s=await this.getDiscoveredAuthority({requestAuthority:t.authority}),c=pn(this.browserStorage,s,r,te,o,e.client_info,void 0,o.tid,void 0,e.account.id,this.logger),l=await this.generateAuthenticationResult(e,t,o,c,s.canonicalAuthority,n);return this.cacheAccount(c),this.cacheNativeTokens(e,t,r,o,e.access_token,l.tenantId,n),l}createHomeAccountIdentifier(e,t){return M.generateHomeAccountId(e.client_info||d.EMPTY_STRING,Q.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?P.fromString(e.scope):P.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===k.POP&&t.signPopToken){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const n=new Me(this.browserCrypto),o={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw g(Zt);return n.signPopToken(e.access_token,t.keyId,o)}else return e.access_token}async generateAuthenticationResult(e,t,n,o,r,a){const s=this.addTelemetryFromNativeResponse(e),c=e.scope?P.fromString(e.scope):P.fromString(t.scope),l=e.account.properties||{},u=l.UID||n.oid||n.sub||d.EMPTY_STRING,p=l.TenantId||n.tid||d.EMPTY_STRING,f=ln(o.getAccountInfo(),void 0,n,e.id_token);f.nativeAccountId!==e.account.id&&(f.nativeAccountId=e.account.id);const A=await this.generatePopAccessToken(e,t),_=t.tokenType===k.POP?k.POP:k.BEARER;return{authority:r,uniqueId:u,tenantId:p,scopes:c.asArray(),account:f,idToken:e.id_token,idTokenClaims:n,accessToken:A,fromCache:s?this.isResponseFromCache(s):!1,expiresOn:new Date(Number(a+e.expires_in)*1e3),tokenType:_,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(t=>{this.logger.error(`Error occurred while removing account context from browser storage. ${t}`)})}cacheNativeTokens(e,t,n,o,r,a,s){const c=ut(n,t.authority,e.id_token||"",t.clientId,o.tid||""),l=t.tokenType===k.POP?d.SHR_NONCE_VALIDITY:(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,u=s+l,p=this.generateScopes(e,t),f=gt(n,t.authority,r,t.clientId,o.tid||a,p.printScopes(),u,0,te,void 0,t.tokenType,void 0,t.keyId),A={idToken:c,accessToken:f};this.nativeStorageManager.saveCacheRecord(A,t.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw go(Qt,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch{this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return typeof e.is_cached>"u"?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});const n=new S(t);n.validateAsUri();const{scopes:o,...r}=e,a=new P(o||[]);a.appendScopes(Le);const s=()=>{switch(this.apiId){case b.ssoSilent:case b.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),L.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case L.NONE:case L.CONSENT:case L.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),C(Mr)}},c={...r,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:a.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:s(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(c.signPopToken&&e.popKid)throw C(Lr);if(this.handleExtraBrokerParams(c),c.extraParameters=c.extraParameters||{},c.extraParameters.telemetry=Re.MATS_TELEMETRY,e.authenticationScheme===k.POP){const l={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},u=new Me(this.browserCrypto);let p;if(c.keyId)p=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:c.keyId})),c.signPopToken=!1;else{const f=await m(u.generateCnf.bind(u),h.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(l,this.logger);p=f.reqCnfString,c.keyId=f.kid,c.signPopToken=!0}c.reqCnf=p}return this.addRequestSKUs(c),c}handleExtraBrokerParams(e){const t=e.extraParameters&&e.extraParameters.hasOwnProperty(un)&&e.extraParameters.hasOwnProperty(Ht)&&e.extraParameters.hasOwnProperty(fe);if(!e.embeddedClientId&&!t)return;let n="";const o=e.redirectUri;e.embeddedClientId?(e.redirectUri=this.config.auth.redirectUri,n=e.embeddedClientId):e.extraParameters&&(e.redirectUri=e.extraParameters[Ht],n=e.extraParameters[fe]),e.extraParameters={child_client_id:n,child_redirect_uri:o},this.performanceClient?.addFields({embeddedClientId:n,embeddedRedirectUri:o},e.correlationId)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class ee{constructor(e,t,n,o){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=o,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=n,this.handshakeEvent=n.startMeasurement(h.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:Re.CHANNEL_ID,extensionId:this.extensionId,responseId:ce(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((n,o)=>{this.resolvers.set(t.responseId,{resolve:n,reject:o})})}static async createProvider(e,t,n){e.trace("NativeMessageHandler - createProvider called.");try{const o=new ee(e,t,n,Re.PREFERRED_EXTENSION_ID);return await o.sendHandshakeRequest(),o}catch{const r=new ee(e,t,n);return await r.sendHandshakeRequest(),r}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:Re.CHANNEL_ID,extensionId:this.extensionId,responseId:ce(),body:{method:pe.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=t=>{this.onChannelMessage(t)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,n)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:n}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),n(C(Or)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(!(!t.channel||t.channel!==Re.CHANNEL_ID)&&!(t.extensionId&&t.extensionId!==this.extensionId)&&t.body.method===pe.HandshakeRequest){const n=this.handshakeResolvers.get(t.responseId);if(!n){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),n.reject(C(Nr))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,n=this.resolvers.get(t.responseId),o=this.handshakeResolvers.get(t.responseId);try{const r=t.body.method;if(r===pe.Response){if(!n)return;const a=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(a)}`),a.status!=="Success")n.reject($t(a.code,a.description,a.ext));else if(a.result)a.result.code&&a.result.description?n.reject($t(a.result.code,a.result.description,a.result.ext)):n.resolve(a.result);else throw go(Qt,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(r===pe.HandshakeResponse){if(!o){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),o.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(r){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${r}`),this.logger.errorPii(`Unable to parse ${e}`),n?n.reject(r):o&&o.reject(r)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,n,o){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!n)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(o)switch(o){case k.BEARER:case k.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Pn{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async handleCodeResponse(e,t){this.performanceClient.addQueueMeasurement(h.HandleCodeResponse,t.correlationId);let n;try{n=this.authModule.handleFragmentResponse(e,t.state)}catch(o){throw o instanceof ge&&o.subError===ye?C(ye):o}return m(this.handleCodeResponseFromServer.bind(this),h.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(n,t)}async handleCodeResponseFromServer(e,t,n=!0){if(this.performanceClient.addQueueMeasurement(h.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await m(this.authModule.updateAuthority.bind(this.authModule),h.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),n&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const r=this.createCcsCredentials(t);r&&(this.authCodeRequest.ccsCredential=r)}return await m(this.authModule.acquireToken.bind(this.authModule),h.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:$.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:$.UPN}:null}}/*! @azure/msal-browser v3.28.1 2025-01-14 */function Jr(i,e,t){const n=at(i);if(!n)throw Wo(i)?(t.error(`A ${e} is present in the iframe but it does not contain known properties. It's likely that the ${e} has been replaced by code running on the redirectUri page.`),t.errorPii(`The ${e} detected is: ${i}`),C(hr)):(t.error(`The request has returned to the redirectUri but a ${e} is not present. It's likely that the ${e} has been removed or the page has been redirected by code running on the redirectUri page.`),C(lr));return n}function cc(i,e,t){if(!i.state)throw C(Tn);const n=Qr(e,i.state);if(!n)throw C(dr);if(n.interactionType!==t)throw C(ur)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class lc extends He{constructor(e,t,n,o,r,a,s,c,l,u){super(e,t,n,o,r,a,s,l,u),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=c}acquireToken(e){try{const n={popupName:this.generatePopupName(e.scopes||Le,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,n)):(this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),n.popup=this.openSizedPopup("about:blank",n),this.acquireTokenPopupAsync(e,n))}catch(t){return Promise.reject(t)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),n={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},o=e&&e.authority,r=e&&e.mainWindowRedirectUri;return this.config.system.asyncPopups?(this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,n,o,r)):(this.logger.verbose("asyncPopup set to false, opening popup"),n.popup=this.openSizedPopup("about:blank",n),this.logoutPopupAsync(t,n,o,r))}catch(t){return Promise.reject(t)}}async acquireTokenPopupAsync(e,t){this.logger.verbose("acquireTokenPopupAsync called");const n=this.initializeServerTelemetryManager(b.acquireTokenPopup),o=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,y.Popup);Vr(o.authority);try{const r=await m(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(o),a=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:o.authority,requestAzureCloudOptions:o.azureCloudOptions,requestExtraQueryParameters:o.extraQueryParameters,account:o.account}),s=ee.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let c;s&&(c=this.performanceClient.startMeasurement(h.FetchAccountIdWithNativeBroker,e.correlationId));const l=await a.getAuthCodeUrl({...o,nativeBroker:s}),u=new Pn(a,this.browserStorage,r,this.logger,this.performanceClient),p=this.initiateAuthRequest(l,t);this.eventHandler.emitEvent(T.POPUP_OPENED,y.Popup,{popupWindow:p},null);const f=await this.monitorPopupForHash(p,t.popupWindowParent),A=Ae(Jr,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(f,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(X.removeThrottle(this.browserStorage,this.config.auth.clientId,r),A.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),c&&c.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw C(qe);const v=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,A.accountId,this.nativeStorage,o.correlationId),{userRequestState:D}=W.parseRequestState(this.browserCrypto,o.state);return await v.acquireToken({...o,state:D,prompt:void 0})}return await u.handleCodeResponse(A,o)}catch(r){throw t.popup?.close(),r instanceof N&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),r}}async logoutPopupAsync(e,t,n,o){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(T.LOGOUT_START,y.Popup,e);const r=this.initializeServerTelemetryManager(b.logoutPopup);try{await this.clearCacheOnLogout(e.account);const a=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:n,account:e.account||void 0});try{a.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&a.authority.protocolMode===se.OIDC){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,y.Popup,e),o){const l={apiId:b.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},u=S.getAbsoluteUrl(o,ae());await this.navigationClient.navigateInternal(u,l)}t.popup?.close();return}}const s=a.getLogoutUri(e);this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,y.Popup,e);const c=this.openPopup(s,t);if(this.eventHandler.emitEvent(T.POPUP_OPENED,y.Popup,{popupWindow:c},null),await this.monitorPopupForHash(c,t.popupWindowParent).catch(()=>{}),o){const l={apiId:b.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},u=S.getAbsoluteUrl(o,ae());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${u}`),await this.navigationClient.navigateInternal(u,l)}else this.logger.verbose("No main window navigation requested")}catch(a){throw t.popup?.close(),a instanceof N&&(a.setCorrelationId(this.correlationId),r.cacheFailedRequest(a)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(T.LOGOUT_FAILURE,y.Popup,null,a),this.eventHandler.emitEvent(T.LOGOUT_END,y.Popup),a}this.eventHandler.emitEvent(T.LOGOUT_END,y.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),C(yt)}monitorPopupForHash(e,t){return new Promise((n,o)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const r=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(r),o(C(ye));return}let a="";try{a=e.location.href}catch{}if(!a||a==="about:blank")return;clearInterval(r);let s="";const c=this.config.auth.OIDCOptions.serverResponseType;e&&(c===Ge.QUERY?s=e.location.search:s=e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),n(s)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let n;if(t.popup?(n=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),n.location.assign(e)):typeof t.popup>"u"&&(this.logger.verbosePii(`Opening popup window to: ${e}`),n=this.openSizedPopup(e,t)),!n)throw C(pr);return n.focus&&n.focus(),this.currentWindow=n,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),n}catch(n){throw this.logger.error("error opening popup "+n.message),this.browserStorage.setInteractionInProgress(!1),C(mr)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:n,popupWindowParent:o}){const r=o.screenLeft?o.screenLeft:o.screenX,a=o.screenTop?o.screenTop:o.screenY,s=o.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,c=o.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let l=n.popupSize?.width,u=n.popupSize?.height,p=n.popupPosition?.top,f=n.popupPosition?.left;return(!l||l<0||l>s)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),l=z.POPUP_WIDTH),(!u||u<0||u>c)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),u=z.POPUP_HEIGHT),(!p||p<0||p>c)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),p=Math.max(0,c/2-z.POPUP_HEIGHT/2+a)),(!f||f<0||f>s)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),f=Math.max(0,s/2-z.POPUP_WIDTH/2+r)),o.open(e,t,`width=${l}, height=${u}, top=${p}, left=${f}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(y.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${z.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${z.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class ho{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(w.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(w.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const n={apiId:b.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if(typeof t.onRedirectNavigate=="function")if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),t.onRedirectNavigate(e)!==!1){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,n);return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,n);return}}else throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),C(yt)}async handleCodeResponse(e,t){this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);const n=this.browserStorage.generateStateKey(t),o=this.browserStorage.getTemporaryCache(n);if(!o)throw g(nt,"Cached State");let r;try{r=this.authModule.handleFragmentResponse(e,o)}catch(l){throw l instanceof ge&&l.subError===ye?C(ye):l}const a=this.browserStorage.generateNonceKey(o),s=this.browserStorage.getTemporaryCache(a);if(this.authCodeRequest.code=r.code,r.cloud_instance_host_name&&await m(this.authModule.updateAuthority.bind(this.authModule),h.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(r.cloud_instance_host_name,this.authCodeRequest.correlationId),r.nonce=s||void 0,r.state=o,r.client_info)this.authCodeRequest.clientInfo=r.client_info;else{const l=this.checkCcsCredentials();l&&(this.authCodeRequest.ccsCredential=l)}const c=await this.authModule.acquireToken(this.authCodeRequest,r);return this.browserStorage.cleanRequestByState(t),c}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(w.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch{this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}/*! @azure/msal-browser v3.28.1 2025-01-14 */function hc(){if(typeof window>"u"||typeof window.performance>"u"||typeof window.performance.getEntriesByType!="function")return;const i=window.performance.getEntriesByType("navigation");return(i.length?i[0]:void 0)?.type}class dc extends He{constructor(e,t,n,o,r,a,s,c,l,u){super(e,t,n,o,r,a,s,l,u),this.nativeStorage=c}async acquireToken(e){const t=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,y.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const n=this.initializeServerTelemetryManager(b.acquireTokenRedirect),o=r=>{r.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(T.RESTORE_FROM_BFCACHE,y.Redirect))};try{const r=await m(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),a=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),s=new ho(a,this.browserStorage,r,this.logger,this.performanceClient),c=await a.getAuthCodeUrl({...t,nativeBroker:ee.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),l=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${l}`),window.addEventListener("pageshow",o),await s.initiateAuthRequest(c,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:l,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(r){throw r instanceof N&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),window.removeEventListener("pageshow",o),this.browserStorage.cleanRequestByState(t.state),r}}async handleRedirectPromise(e="",t){const n=this.initializeServerTelemetryManager(b.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const[o,r]=this.getRedirectResponse(e||"");if(!o)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(y.Redirect),hc()!=="back_forward"?t.event.errorCode="no_server_response":this.logger.verbose("Back navigation event detected. Muting no_server_response error"),null;const a=this.browserStorage.getTemporaryCache(w.ORIGIN_URI,!0)||d.EMPTY_STRING,s=S.removeHashFromUrl(a),c=S.removeHashFromUrl(window.location.href);if(s===c&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),a.indexOf("#")>-1&&ys(a),await this.handleResponse(o,n);if(this.config.auth.navigateToLoginRequestUrl){if(!Rn()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(w.URL_HASH,r,!0);const l={apiId:b.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let u=!0;if(!a||a==="null"){const p=Is();this.browserStorage.setTemporaryCache(w.ORIGIN_URI,p,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),u=await this.navigationClient.navigateInternal(p,l)}else this.logger.verbose(`Navigating to loginRequestUrl: ${a}`),u=await this.navigationClient.navigateInternal(a,l);if(!u)return await this.handleResponse(o,n)}}else return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(o,n);return null}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),this.browserStorage.cleanRequestByInteractionType(y.Redirect),o}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(this.config.auth.OIDCOptions.serverResponseType===Ge.QUERY?t=window.location.search:t=window.location.hash);let n=at(t);if(n){try{cc(n,this.browserCrypto,y.Redirect)}catch(r){return r instanceof N&&this.logger.error(`Interaction type validation failed due to ${r.errorCode}: ${r.errorMessage}`),[null,""]}return Cs(window),this.logger.verbose("Hash contains known properties, returning response hash"),[n,t]}const o=this.browserStorage.getTemporaryCache(w.URL_HASH,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(w.URL_HASH)),o&&(n=at(o),n)?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,o]):[null,""]}async handleResponse(e,t){const n=e.state;if(!n)throw C(Tn);const o=this.browserStorage.getCachedRequest(n);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw C(qe);const c=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,o.correlationId),{userRequestState:l}=W.parseRequestState(this.browserCrypto,n);return c.acquireToken({...o,state:l,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(n)})}const r=this.browserStorage.getCachedAuthority(n);if(!r)throw C(In);const a=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:r});return X.removeThrottle(this.browserStorage,this.config.auth.clientId,o),new ho(a,this.browserStorage,o,this.logger,this.performanceClient).handleCodeResponse(e,n)}async logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(b.logout);try{this.eventHandler.emitEvent(T.LOGOUT_START,y.Redirect,e),await this.clearCacheOnLogout(t.account);const o={apiId:b.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},r=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(r.authority.protocolMode===se.OIDC)try{r.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId){this.browserStorage.removeAccount(t.account?.homeAccountId),this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,y.Redirect,t);return}}const a=r.getLogoutUri(t);if(this.eventHandler.emitEvent(T.LOGOUT_SUCCESS,y.Redirect,t),e&&typeof e.onRedirectNavigate=="function")if(e.onRedirectNavigate(a)!==!1){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(a,o);return}else this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation");else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(a,o);return}}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),this.eventHandler.emitEvent(T.LOGOUT_FAILURE,y.Redirect,null,o),this.eventHandler.emitEvent(T.LOGOUT_END,y.Redirect),o}this.eventHandler.emitEvent(T.LOGOUT_END,y.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return S.getAbsoluteUrl(t,ae())}}/*! @azure/msal-browser v3.28.1 2025-01-14 */async function uc(i,e,t,n,o){if(e.addQueueMeasurement(h.SilentHandlerInitiateAuthRequest,n),!i)throw t.info("Navigate url is empty"),C(yt);return o?m(mc,h.SilentHandlerLoadFrame,t,e,n)(i,o,e,n):Ae(pc,h.SilentHandlerLoadFrameSync,t,e,n)(i)}async function gc(i,e,t,n,o,r,a){return n.addQueueMeasurement(h.SilentHandlerMonitorIframeForHash,r),new Promise((s,c)=>{e<Gt&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${e}ms) than the default (${Gt}ms). This may result in timeouts.`);const l=window.setTimeout(()=>{window.clearInterval(u),c(C(fr))},e),u=window.setInterval(()=>{let p="";const f=i.contentWindow;try{p=f?f.location.href:""}catch{}if(!p||p==="about:blank")return;let A="";f&&(a===Ge.QUERY?A=f.location.search:A=f.location.hash),window.clearTimeout(l),window.clearInterval(u),s(A)},t)}).finally(()=>{Ae(fc,h.RemoveHiddenIframe,o,n,r)(i)})}function mc(i,e,t,n){return t.addQueueMeasurement(h.SilentHandlerLoadFrame,n),new Promise((o,r)=>{const a=Xr();window.setTimeout(()=>{if(!a){r("Unable to load iframe");return}a.src=i,o(a)},e)})}function pc(i){const e=Xr();return e.src=i,e}function Xr(){const i=document.createElement("iframe");return i.className="msalSilentIframe",i.style.visibility="hidden",i.style.position="absolute",i.style.width=i.style.height="0",i.style.border="0",i.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(i),i}function fc(i){document.body===i.parentNode&&document.body.removeChild(i)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Cc extends He{constructor(e,t,n,o,r,a,s,c,l,u,p){super(e,t,n,o,r,a,c,u,p),this.apiId=s,this.nativeStorage=l}async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentIframeClientAcquireToken,e.correlationId),!e.loginHint&&!e.sid&&(!e.account||!e.account.username)&&this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");const t={...e};t.prompt?t.prompt!==L.NONE&&t.prompt!==L.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${t.prompt} with ${L.NONE}`),t.prompt=L.NONE):t.prompt=L.NONE;const n=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,y.Silent);Vr(n.authority);const o=this.initializeServerTelemetryManager(this.apiId);let r;try{return r=await m(this.createAuthCodeClient.bind(this),h.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:o,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),await m(this.silentTokenHelper.bind(this),h.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(r,n)}catch(a){if(a instanceof N&&(a.setCorrelationId(this.correlationId),o.cacheFailedRequest(a)),!r||!(a instanceof N)||a.errorCode!==z.INVALID_GRANT_ERROR)throw a;this.performanceClient.addFields({retryError:a.errorCode},this.correlationId);const s=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(t,y.Silent);return await m(this.silentTokenHelper.bind(this),h.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(r,s)}}logout(){return Promise.reject(C(Tt))}async silentTokenHelper(e,t){const n=t.correlationId;this.performanceClient.addQueueMeasurement(h.SilentIframeClientTokenHelper,n);const o=await m(this.initializeAuthorizationCodeRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,n)(t),r=await m(e.getAuthCodeUrl.bind(e),h.GetAuthCodeUrl,this.logger,this.performanceClient,n)({...t,nativeBroker:ee.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),a=new Pn(e,this.browserStorage,o,this.logger,this.performanceClient),s=await m(uc,h.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,n)(r,this.performanceClient,this.logger,n,this.config.system.navigateFrameWait),c=this.config.auth.OIDCOptions.serverResponseType,l=await m(gc,h.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,n)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,n,c),u=Ae(Jr,h.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(l,c,this.logger);if(u.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw C(qe);const p=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,u.accountId,this.browserStorage,n),{userRequestState:f}=W.parseRequestState(this.browserCrypto,t.state);return m(p.acquireToken.bind(p),h.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,n)({...t,state:f,prompt:t.prompt||L.NONE})}return m(a.handleCodeResponse.bind(a),h.HandleCodeResponse,this.logger,this.performanceClient,n)(u,t)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class yc extends He{async acquireToken(e){this.performanceClient.addQueueMeasurement(h.SilentRefreshClientAcquireToken,e.correlationId);const t=await m(Nn,h.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),n={...e,...t};e.redirectUri&&(n.redirectUri=this.getRedirectUri(e.redirectUri));const o=this.initializeServerTelemetryManager(b.acquireTokenSilent_silentFlow),r=await this.createRefreshTokenClient({serverTelemetryManager:o,authorityUrl:n.authority,azureCloudOptions:n.azureCloudOptions,account:n.account});return m(r.acquireTokenByRefreshToken.bind(r),h.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(n).catch(a=>{throw a.setCorrelationId(this.correlationId),o.cacheFailedRequest(a),a})}logout(){return Promise.reject(C(Tt))}async createRefreshTokenClient(e){const t=await m(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account});return new Kt(t,this.performanceClient)}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Tc{constructor(e,t,n,o){this.isBrowserEnvironment=typeof window<"u",this.config=e,this.storage=t,this.logger=n,this.cryptoObj=o}loadExternalTokens(e,t,n){if(!this.isBrowserEnvironment)throw C(It);const o=t.id_token?Ie(t.id_token,te):void 0,r={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},a=e.authority?new K(K.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,r,this.logger,e.correlationId||ce()):void 0,s=this.loadAccount(e,n.clientInfo||t.client_info||"",o,a),c=this.loadIdToken(t,s.homeAccountId,s.environment,s.realm),l=this.loadAccessToken(e,t,s.homeAccountId,s.environment,s.realm,n),u=this.loadRefreshToken(t,s.homeAccountId,s.environment);return this.generateAuthenticationResult(e,{account:s,idToken:c,accessToken:l,refreshToken:u},o,a)}loadAccount(e,t,n,o){if(this.logger.verbose("TokenCache - loading account"),e.account){const c=M.createFromAccountInfo(e.account);return this.storage.setAccount(c),c}else if(!o||!t&&!n)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),C(wr);const r=M.generateHomeAccountId(t,o.authorityType,this.logger,this.cryptoObj,n),a=n?.tid,s=pn(this.storage,o,r,te,n,t,o.hostnameAndPort,a,void 0,void 0,this.logger);return this.storage.setAccount(s),s}loadIdToken(e,t,n,o){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");const r=ut(t,n,e.id_token,this.config.auth.clientId,o);return this.storage.setIdTokenCredential(r),r}loadAccessToken(e,t,n,o,r,a){if(t.access_token)if(t.expires_in){if(!t.scope&&(!e.scopes||!e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null}else return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;else return this.logger.verbose("TokenCache - no access token found in response"),null;this.logger.verbose("TokenCache - loading access token");const s=t.scope?P.fromString(t.scope):new P(e.scopes),c=a.expiresOn||t.expires_in+new Date().getTime()/1e3,l=a.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+new Date().getTime()/1e3,u=gt(n,o,t.access_token,this.config.auth.clientId,r,s.printScopes(),c,l,te);return this.storage.setAccessTokenCredential(u),u}loadRefreshToken(e,t,n){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");const o=Mo(t,n,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(o),o}generateAuthenticationResult(e,t,n,o){let r="",a=[],s=null,c;t?.accessToken&&(r=t.accessToken.secret,a=P.fromString(t.accessToken.target).asArray(),s=new Date(Number(t.accessToken.expiresOn)*1e3),c=new Date(Number(t.accessToken.extendedExpiresOn)*1e3));const l=t.account;return{authority:o?o.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:a,account:l.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:n||{},accessToken:r,fromCache:!0,expiresOn:s,correlationId:e.correlationId||"",requestId:"",extExpiresOn:c,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:l.cloudGraphHostName||"",msGraphHost:l.msGraphHost||"",fromNativeBroker:!1}}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ic extends ir{constructor(e){super(e),this.includeRedirectUri=!1}}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Ac extends He{constructor(e,t,n,o,r,a,s,c,l,u){super(e,t,n,o,r,a,c,l,u),this.apiId=s}async acquireToken(e){if(!e.code)throw C(_r);const t=await m(this.initializeAuthorizationRequest.bind(this),h.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,y.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const o={...t,code:e.code},r=await m(this.getClientConfiguration.bind(this),h.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),a=new Ic(r);this.logger.verbose("Auth code client created");const s=new Pn(a,this.browserStorage,o,this.logger,this.performanceClient);return await m(s.handleCodeResponseFromServer.bind(s),h.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(C(Tt))}}/*! @azure/msal-browser v3.28.1 2025-01-14 */function J(i){const e=i?.idTokenClaims;if(e?.tfp||e?.acr)return"B2C";if(e?.tid){if(e?.tid==="9188040d-6c67-4c5b-b112-36a304b66dad")return"MSA"}else return;return"AAD"}function et(i,e){try{bn(i)}catch(t){throw e.end({success:!1},t),t}}class St{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new Ue(this.logger,this.performanceClient):ot,this.eventHandler=new Qs(this.logger),this.browserStorage=this.isBrowserEnvironment?new zt(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,Ma(this.config.auth),this.performanceClient):xs(this.config.auth.clientId,this.logger);const t={cacheLocation:B.MemoryStorage,temporaryCacheLocation:B.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new zt(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new Tc(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this),this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}static async createController(e,t){const n=new St(e);return await n.initialize(t),n}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}if(!this.isBrowserEnvironment){this.logger.info("in non-browser environment, exiting early."),this.initialized=!0,this.eventHandler.emitEvent(T.INITIALIZE_END);return}const t=e?.correlationId||this.getRequestCorrelationId(),n=this.config.system.allowNativeBroker,o=this.performanceClient.startMeasurement(h.InitializeClientApplication,t);if(this.eventHandler.emitEvent(T.INITIALIZE_START),n)try{this.nativeExtensionProvider=await ee.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(r){this.logger.verbose(r)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await m(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),h.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(T.INITIALIZE_END),o.end({allowNativeBroker:n,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),$r(this.initialized),this.isBrowserEnvironment){const t=e||"";let n=this.redirectResponse.get(t);return typeof n>"u"?(n=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,n),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),n}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){const t=this.getAllAccounts(),n=this.browserStorage.getCachedNativeRequest(),o=n&&ee.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,r=o?n?.correlationId:this.browserStorage.getTemporaryCache(w.CORRELATION_ID,!0)||"",a=this.performanceClient.startMeasurement(h.AcquireTokenRedirect,r);this.eventHandler.emitEvent(T.HANDLE_REDIRECT_START,y.Redirect);let s;if(o&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");const c=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,n.accountId,this.nativeInternalStorage,n.correlationId);s=m(c.handleRedirectPromise.bind(c),h.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,a.event.correlationId)(this.performanceClient,a.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const c=this.createRedirectClient(r);s=m(c.handleRedirectPromise.bind(c),h.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,a.event.correlationId)(e,a)}return s.then(c=>(c?(t.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(T.LOGIN_SUCCESS,y.Redirect,c),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,y.Redirect,c),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),a.end({success:!0,accountType:J(c.account)})):a.event.errorCode?a.end({success:!1}):a.discard(),this.eventHandler.emitEvent(T.HANDLE_REDIRECT_END,y.Redirect),c)).catch(c=>{const l=c;throw t.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,y.Redirect,null,l):this.eventHandler.emitEvent(T.LOGIN_FAILURE,y.Redirect,null,l),this.eventHandler.emitEvent(T.HANDLE_REDIRECT_END,y.Redirect),a.end({success:!1},l),c})}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);const n=this.performanceClient.startMeasurement(h.AcquireTokenPreRedirect,t);n.add({accountType:J(e.account),scenarioId:e.scenarioId});const o=e.onRedirectNavigate;if(o)e.onRedirectNavigate=a=>{const s=typeof o=="function"?o(a):void 0;return s!==!1?n.end({success:!0}):n.discard(),s};else{const a=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=s=>{const c=typeof a=="function"?a(s):void 0;return c!==!1?n.end({success:!0}):n.discard(),c}}const r=this.getAllAccounts().length>0;try{ao(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),r?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,y.Redirect,e):this.eventHandler.emitEvent(T.LOGIN_START,y.Redirect,e);let a;return this.nativeExtensionProvider&&this.canUseNative(e)?a=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,n).catch(c=>{if(c instanceof Z&&we(c))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(c instanceof j)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),c}):a=this.createRedirectClient(t).acquireToken(e),await a}catch(a){throw n.end({success:!1},a),r?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,y.Redirect,null,a):this.eventHandler.emitEvent(T.LOGIN_FAILURE,y.Redirect,null,a),a}}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(h.AcquireTokenPopup,t);n.add({scenarioId:e.scenarioId,accountType:J(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),et(this.initialized,n),this.browserStorage.setInteractionInProgress(!0)}catch(a){return Promise.reject(a)}const o=this.getAllAccounts();o.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,y.Popup,e):this.eventHandler.emitEvent(T.LOGIN_START,y.Popup,e);let r;return this.canUseNative(e)?r=this.acquireTokenNative({...e,correlationId:t},b.acquireTokenPopup).then(a=>(this.browserStorage.setInteractionInProgress(!1),n.end({success:!0,isNativeBroker:!0,accountType:J(a.account)}),a)).catch(a=>{if(a instanceof Z&&we(a))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(a instanceof j)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),a}):r=this.createPopupClient(t).acquireToken(e),r.then(a=>(o.length<this.getAllAccounts().length?this.eventHandler.emitEvent(T.LOGIN_SUCCESS,y.Popup,a):this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,y.Popup,a),n.end({success:!0,accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length,accountType:J(a.account)}),a)).catch(a=>(o.length>0?this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,y.Popup,null,a):this.eventHandler.emitEvent(T.LOGIN_FAILURE,y.Popup,null,a),n.end({success:!1},a),Promise.reject(a)))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){const t=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:t};this.ssoSilentMeasurement=this.performanceClient.startMeasurement(h.SsoSilent,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:J(e.account)}),et(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(T.SSO_SILENT_START,y.Silent,n);let o;return this.canUseNative(n)?o=this.acquireTokenNative(n,b.ssoSilent).catch(r=>{if(r instanceof Z&&we(r))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw r}):o=this.createSilentIframeClient(n.correlationId).acquireToken(n),o.then(r=>(this.eventHandler.emitEvent(T.SSO_SILENT_SUCCESS,y.Silent,r),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:r.fromNativeBroker,accessTokenSize:r.accessToken.length,idTokenSize:r.idToken.length,accountType:J(r.account)}),r)).catch(r=>{throw this.eventHandler.emitEvent(T.SSO_SILENT_FAILURE,y.Silent,null,r),this.ssoSilentMeasurement?.end({success:!1},r),r}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);const n=this.performanceClient.startMeasurement(h.AcquireTokenByCode,t);et(this.initialized,n),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_START,y.Silent,e),n.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw C(Rr);if(e.code){const o=e.code;let r=this.hybridAuthCodeResponses.get(o);return r?(this.logger.verbose("Existing acquireTokenByCode request found",t),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),r=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(a=>(this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_SUCCESS,y.Silent,a),this.hybridAuthCodeResponses.delete(o),n.end({success:!0,isNativeBroker:a.fromNativeBroker,accessTokenSize:a.accessToken.length,idTokenSize:a.idToken.length,accountType:J(a.account)}),a)).catch(a=>{throw this.hybridAuthCodeResponses.delete(o),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_FAILURE,y.Silent,null,a),n.end({success:!1},a),a}),this.hybridAuthCodeResponses.set(o,r)),await r}else if(e.nativeAccountId)if(this.canUseNative(e,e.nativeAccountId)){const o=await this.acquireTokenNative({...e,correlationId:t},b.acquireTokenByCode,e.nativeAccountId).catch(r=>{throw r instanceof Z&&we(r)&&(this.nativeExtensionProvider=void 0),r});return n.end({accountType:J(o.account),success:!0}),o}else throw C(br);else throw C(kr)}catch(o){throw this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_BY_CODE_FAILURE,y.Silent,null,o),n.end({success:!1},o),o}}async acquireTokenByCodeAsync(e){return this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(h.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),await this.createSilentAuthCodeClient(e.correlationId).acquireToken(e).then(o=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:o.fromCache,isNativeBroker:o.fromNativeBroker}),o)).catch(o=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},o),o}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(h.AcquireTokenFromCache,e.correlationId),t){case q.Default:case q.AccessToken:case q.AccessTokenAndRefreshToken:const n=this.createSilentCacheClient(e.correlationId);return m(n.acquireToken.bind(n),h.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw g(ie)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(h.AcquireTokenByRefreshToken,e.correlationId),t){case q.Default:case q.AccessTokenAndRefreshToken:case q.RefreshToken:case q.RefreshTokenAndNetwork:const n=this.createSilentRefreshClient(e.correlationId);return m(n.acquireToken.bind(n),h.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw g(ie)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(h.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return m(t.acquireToken.bind(t),h.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return ao(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return bn(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(t){return Promise.reject(t)}}async clearCache(e){if(!this.isBrowserEnvironment){this.logger.info("in non-browser environment, returning early.");return}const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return Fs(this.logger,this.browserStorage,this.isBrowserEnvironment,e)}getAccount(e){return Bs(e,this.logger,this.browserStorage)}getAccountByUsername(e){return Gs(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return qs(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return zs(e,this.logger,this.browserStorage)}setActiveAccount(e){$s(e,this.browserStorage)}getActiveAccount(){return Vs(this.browserStorage)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=M.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(n),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,n){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw C(qe);return new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,n||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!ee.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case L.NONE:case L.CONSENT:case L.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!t&&!this.getNativeAccountId(e)?(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1):!0}getNativeAccountId(e){const t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new lc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new dc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new Cc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new jr(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new yc(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new Ac(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e,t){return this.eventHandler.addEventCallback(e,t)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return zr(),this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}handleAccountCacheChange(e){try{e.key?.includes(U.ACTIVE_ACCOUNT_FILTERS)&&this.eventHandler.emitEvent(T.ACTIVE_ACCOUNT_CHANGED);const t=e.newValue||e.oldValue;if(!t)return;const n=JSON.parse(t);if(typeof n!="object"||!M.isAccountEntity(n))return;const r=Pe.toObject(new M,n).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.eventHandler.emitEvent(T.ACCOUNT_ADDED,void 0,r)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.eventHandler.emitEvent(T.ACCOUNT_REMOVED,void 0,r))}catch{return}}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?ce():d.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||oo})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||oo})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(h.AcquireTokenSilent,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),et(this.initialized,n),this.logger.verbose("acquireTokenSilent called",t);const o=e.account||this.getActiveAccount();if(!o)throw C(Ir);n.add({accountType:J(o)});const r={clientId:this.config.auth.clientId,authority:e.authority||d.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:o.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions},a=JSON.stringify(r),s=this.activeSilentTokenRequests.get(a);if(typeof s>"u"){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);const c=m(this.acquireTokenSilentAsync.bind(this),h.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},o).then(l=>(this.activeSilentTokenRequests.delete(a),n.end({success:!0,fromCache:l.fromCache,isNativeBroker:l.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,accessTokenSize:l.accessToken.length,idTokenSize:l.idToken.length}),l)).catch(l=>{throw this.activeSilentTokenRequests.delete(a),n.end({success:!1},l),l});return this.activeSilentTokenRequests.set(a,c),{...await c,state:e.state}}else return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),n.discard(),{...await s,state:e.state}}async acquireTokenSilentAsync(e,t){const n=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(h.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_START,y.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",n);const o=await m(Xs,h.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),r=e.cacheLookupPolicy||q.Default;return this.acquireTokenSilentNoIframe(o,r).catch(async s=>{if(Ec(s,r))if(this.activeIframeRequest)if(r!==q.Skip){const[l,u]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${u}`,o.correlationId);const p=this.performanceClient.startMeasurement(h.AwaitConcurrentIframe,o.correlationId);p.add({awaitIframeCorrelationId:u});const f=await l;if(p.end({success:f}),f)return this.logger.verbose(`Parallel iframe request with correlationId: ${u} succeeded. Retrying cache and/or RT redemption`,o.correlationId),this.acquireTokenSilentNoIframe(o,r);throw this.logger.info(`Iframe request with correlationId: ${u} failed. Interaction is required.`),s}else return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",o.correlationId),m(this.acquireTokenBySilentIframe.bind(this),h.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o);else{let l;return this.activeIframeRequest=[new Promise(u=>{l=u}),o.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",o.correlationId),m(this.acquireTokenBySilentIframe.bind(this),h.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o).then(u=>(l(!0),u)).catch(u=>{throw l(!1),u}).finally(()=>{this.activeIframeRequest=void 0})}else throw s}).then(s=>(this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_SUCCESS,y.Silent,s),e.correlationId&&this.performanceClient.addFields({fromCache:s.fromCache,isNativeBroker:s.fromNativeBroker},e.correlationId),s)).catch(s=>{throw this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_FAILURE,y.Silent,null,s),s}).finally(()=>{document.removeEventListener("visibilitychange",n)})}async acquireTokenSilentNoIframe(e,t){return ee.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,b.acquireTokenSilent_silentFlow).catch(async n=>{throw n instanceof Z&&we(n)?(this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,g(ie)):n})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),m(this.acquireTokenFromCache.bind(this),h.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch(n=>{if(t===q.AccessToken)throw n;return this.eventHandler.emitEvent(T.ACQUIRE_TOKEN_NETWORK_START,y.Silent,e),m(this.acquireTokenByRefreshToken.bind(this),h.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)}))}}function Ec(i,e){const t=!(i instanceof j&&i.subError!==Ct),n=i.errorCode===z.INVALID_GRANT_ERROR||i.errorCode===ie,o=t&&n||i.errorCode===ct||i.errorCode===mn,r=os.includes(e);return o&&r}/*! @azure/msal-browser v3.28.1 2025-01-14 */async function Sc(i,e){const t=new Te(i);return await t.initialize(),St.createController(t,e)}/*! @azure/msal-browser v3.28.1 2025-01-14 */class Zr{static async createPublicClientApplication(e){const t=await Sc(e);return new Zr(e,t)}constructor(e,t){this.controller=t||new St(new Te(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e,t){return this.controller.addEventCallback(e,t)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}export{M as AccountEntity,b as ApiId,N as AuthError,k as AuthenticationScheme,tn as AzureCloudInstance,ze as BrowserAuthError,B as BrowserCacheLocation,_n as BrowserConfigurationAuthError,q as CacheLookupPolicy,dt as ClientAuthError,sn as ClientConfigurationError,Gt as DEFAULT_IFRAME_TIMEOUT_MS,Qs as EventHandler,T as EventType,j as InteractionRequiredAuthError,y as InteractionType,ni as JsonWebTokenTypes,Us as LocalStorage,O as LogLevel,ue as Logger,qt as MemoryStorage,ht as NavigationClient,Le as OIDC_DEFAULT_SCOPES,h as PerformanceEvents,L as PromptValue,se as ProtocolMode,Zr as PublicClientApplication,ge as ServerError,Ge as ServerResponseType,Ls as SessionStorage,Y as StringUtils,Ya as StubPerformanceClient,S as UrlString,Et as version};
